{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "description": "Represents `true` or `false` values.",
          "fields": null
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "description": "The query root of GitHub's GraphQL interface.",
          "fields": [
            {
              "name": "codeOfConduct"
            },
            {
              "name": "codesOfConduct"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "enterpriseAdministratorInvitation"
            },
            {
              "name": "enterpriseAdministratorInvitationByToken"
            },
            {
              "name": "license"
            },
            {
              "name": "licenses"
            },
            {
              "name": "marketplaceCategories"
            },
            {
              "name": "marketplaceCategory"
            },
            {
              "name": "marketplaceListing"
            },
            {
              "name": "marketplaceListings"
            },
            {
              "name": "meta"
            },
            {
              "name": "node"
            },
            {
              "name": "nodes"
            },
            {
              "name": "organization"
            },
            {
              "name": "rateLimit"
            },
            {
              "name": "relay"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryOwner"
            },
            {
              "name": "resource"
            },
            {
              "name": "search"
            },
            {
              "name": "securityAdvisories"
            },
            {
              "name": "securityAdvisory"
            },
            {
              "name": "securityVulnerabilities"
            },
            {
              "name": "topic"
            },
            {
              "name": "user"
            },
            {
              "name": "viewer"
            }
          ]
        },
        {
          "name": "Node",
          "kind": "INTERFACE",
          "description": "An object with an ID.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null
        },
        {
          "name": "UniformResourceLocatable",
          "kind": "INTERFACE",
          "description": "Represents a type that can be retrieved by a URL.",
          "fields": [
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "URI",
          "kind": "SCALAR",
          "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
          "fields": null
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
          "fields": [
            {
              "name": "anyPinnableItems"
            },
            {
              "name": "avatarUrl"
            },
            {
              "name": "bio"
            },
            {
              "name": "bioHTML"
            },
            {
              "name": "commitComments"
            },
            {
              "name": "company"
            },
            {
              "name": "companyHTML"
            },
            {
              "name": "contributionsCollection"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "email"
            },
            {
              "name": "followers"
            },
            {
              "name": "following"
            },
            {
              "name": "gist"
            },
            {
              "name": "gistComments"
            },
            {
              "name": "gists"
            },
            {
              "name": "hovercard"
            },
            {
              "name": "id"
            },
            {
              "name": "isBountyHunter"
            },
            {
              "name": "isCampusExpert"
            },
            {
              "name": "isDeveloperProgramMember"
            },
            {
              "name": "isEmployee"
            },
            {
              "name": "isHireable"
            },
            {
              "name": "isSiteAdmin"
            },
            {
              "name": "isViewer"
            },
            {
              "name": "issueComments"
            },
            {
              "name": "issues"
            },
            {
              "name": "itemShowcase"
            },
            {
              "name": "location"
            },
            {
              "name": "login"
            },
            {
              "name": "name"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizations"
            },
            {
              "name": "pinnableItems"
            },
            {
              "name": "pinnedItems"
            },
            {
              "name": "pinnedItemsRemaining"
            },
            {
              "name": "project"
            },
            {
              "name": "projects"
            },
            {
              "name": "projectsResourcePath"
            },
            {
              "name": "projectsUrl"
            },
            {
              "name": "publicKeys"
            },
            {
              "name": "pullRequests"
            },
            {
              "name": "repositories"
            },
            {
              "name": "repositoriesContributedTo"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "savedReplies"
            },
            {
              "name": "sponsorsListing"
            },
            {
              "name": "sponsorshipsAsMaintainer"
            },
            {
              "name": "sponsorshipsAsSponsor"
            },
            {
              "name": "starredRepositories"
            },
            {
              "name": "status"
            },
            {
              "name": "topRepositories"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanChangePinnedItems"
            },
            {
              "name": "viewerCanCreateProjects"
            },
            {
              "name": "viewerCanFollow"
            },
            {
              "name": "viewerIsFollowing"
            },
            {
              "name": "watching"
            },
            {
              "name": "websiteUrl"
            }
          ]
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null
        },
        {
          "name": "PageInfo",
          "kind": "OBJECT",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "endCursor"
            },
            {
              "name": "hasNextPage"
            },
            {
              "name": "hasPreviousPage"
            },
            {
              "name": "startCursor"
            }
          ]
        },
        {
          "name": "DateTime",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded UTC date string.",
          "fields": null
        },
        {
          "name": "RegistryPackageConnection",
          "kind": "OBJECT",
          "description": "The connection type for RegistryPackage.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RegistryPackageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RegistryPackage",
          "kind": "OBJECT",
          "description": "A registry package contains the content for an uploaded package.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "RegistryPackageType",
          "kind": "ENUM",
          "description": "The possible types of a registry package.",
          "fields": null
        },
        {
          "name": "Repository",
          "kind": "OBJECT",
          "description": "A repository contains the content for a project.",
          "fields": [
            {
              "name": "assignableUsers"
            },
            {
              "name": "branchProtectionRules"
            },
            {
              "name": "codeOfConduct"
            },
            {
              "name": "collaborators"
            },
            {
              "name": "commitComments"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "defaultBranchRef"
            },
            {
              "name": "deployKeys"
            },
            {
              "name": "deployments"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "diskUsage"
            },
            {
              "name": "forkCount"
            },
            {
              "name": "forks"
            },
            {
              "name": "fundingLinks"
            },
            {
              "name": "hasIssuesEnabled"
            },
            {
              "name": "hasProjectsEnabled"
            },
            {
              "name": "hasWikiEnabled"
            },
            {
              "name": "homepageUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "isArchived"
            },
            {
              "name": "isDisabled"
            },
            {
              "name": "isFork"
            },
            {
              "name": "isLocked"
            },
            {
              "name": "isMirror"
            },
            {
              "name": "isPrivate"
            },
            {
              "name": "isTemplate"
            },
            {
              "name": "issue"
            },
            {
              "name": "issueOrPullRequest"
            },
            {
              "name": "issues"
            },
            {
              "name": "label"
            },
            {
              "name": "labels"
            },
            {
              "name": "languages"
            },
            {
              "name": "licenseInfo"
            },
            {
              "name": "lockReason"
            },
            {
              "name": "mentionableUsers"
            },
            {
              "name": "mergeCommitAllowed"
            },
            {
              "name": "milestone"
            },
            {
              "name": "milestones"
            },
            {
              "name": "mirrorUrl"
            },
            {
              "name": "name"
            },
            {
              "name": "nameWithOwner"
            },
            {
              "name": "object"
            },
            {
              "name": "openGraphImageUrl"
            },
            {
              "name": "owner"
            },
            {
              "name": "parent"
            },
            {
              "name": "primaryLanguage"
            },
            {
              "name": "project"
            },
            {
              "name": "projects"
            },
            {
              "name": "projectsResourcePath"
            },
            {
              "name": "projectsUrl"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "pullRequests"
            },
            {
              "name": "pushedAt"
            },
            {
              "name": "rebaseMergeAllowed"
            },
            {
              "name": "ref"
            },
            {
              "name": "refs"
            },
            {
              "name": "release"
            },
            {
              "name": "releases"
            },
            {
              "name": "repositoryTopics"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "shortDescriptionHTML"
            },
            {
              "name": "squashMergeAllowed"
            },
            {
              "name": "sshUrl"
            },
            {
              "name": "stargazers"
            },
            {
              "name": "tempCloneToken"
            },
            {
              "name": "templateRepository"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "usesCustomOpenGraphImage"
            },
            {
              "name": "viewerCanAdminister"
            },
            {
              "name": "viewerCanCreateProjects"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerCanUpdateTopics"
            },
            {
              "name": "viewerHasStarred"
            },
            {
              "name": "viewerPermission"
            },
            {
              "name": "viewerSubscription"
            },
            {
              "name": "vulnerabilityAlerts"
            },
            {
              "name": "watchers"
            }
          ]
        },
        {
          "name": "Project",
          "kind": "OBJECT",
          "description": "Projects manage issues, pull requests and notes within a project owner.",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "closed"
            },
            {
              "name": "closedAt"
            },
            {
              "name": "columns"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "number"
            },
            {
              "name": "owner"
            },
            {
              "name": "pendingCards"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanUpdate"
            }
          ]
        },
        {
          "name": "ProjectState",
          "kind": "ENUM",
          "description": "State of the project; either 'open' or 'closed'",
          "fields": null
        },
        {
          "name": "HTML",
          "kind": "SCALAR",
          "description": "A string containing HTML code.",
          "fields": null
        },
        {
          "name": "Actor",
          "kind": "INTERFACE",
          "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "login"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "ProjectOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Project.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "project"
            },
            {
              "name": "projects"
            },
            {
              "name": "projectsResourcePath"
            },
            {
              "name": "projectsUrl"
            },
            {
              "name": "viewerCanCreateProjects"
            }
          ]
        },
        {
          "name": "ProjectConnection",
          "kind": "OBJECT",
          "description": "A list of projects associated with the owner.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ProjectEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ProjectOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of projects can be ordered upon return.",
          "fields": null
        },
        {
          "name": "ProjectOrderField",
          "kind": "ENUM",
          "description": "Properties by which project connections can be ordered.",
          "fields": null
        },
        {
          "name": "OrderDirection",
          "kind": "ENUM",
          "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
          "fields": null
        },
        {
          "name": "ProjectColumnConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectColumn.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ProjectColumnEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ProjectColumn",
          "kind": "OBJECT",
          "description": "A column inside a project.",
          "fields": [
            {
              "name": "cards"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "project"
            },
            {
              "name": "purpose"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "ProjectColumnPurpose",
          "kind": "ENUM",
          "description": "The semantic purpose of the column - todo, in progress, or done.",
          "fields": null
        },
        {
          "name": "ProjectCardConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectCard.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ProjectCardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ProjectCard",
          "kind": "OBJECT",
          "description": "A card in a project.",
          "fields": [
            {
              "name": "column"
            },
            {
              "name": "content"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "isArchived"
            },
            {
              "name": "note"
            },
            {
              "name": "project"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "ProjectCardState",
          "kind": "ENUM",
          "description": "Various content states of a ProjectCard",
          "fields": null
        },
        {
          "name": "ProjectCardItem",
          "kind": "UNION",
          "description": "Types that can be inside Project Cards.",
          "fields": null
        },
        {
          "name": "Issue",
          "kind": "OBJECT",
          "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
          "fields": [
            {
              "name": "activeLockReason"
            },
            {
              "name": "assignees"
            },
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "closed"
            },
            {
              "name": "closedAt"
            },
            {
              "name": "comments"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "hovercard"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "labels"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "locked"
            },
            {
              "name": "milestone"
            },
            {
              "name": "number"
            },
            {
              "name": "participants"
            },
            {
              "name": "projectCards"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "timelineItems"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            },
            {
              "name": "viewerSubscription"
            }
          ]
        },
        {
          "name": "UserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "UserEdge",
          "kind": "OBJECT",
          "description": "Represents a user.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "UserContentEditConnection",
          "kind": "OBJECT",
          "description": "A list of edits to content.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "UserContentEditEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "UserContentEdit",
          "kind": "OBJECT",
          "description": "An edit on user content",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "deletedAt"
            },
            {
              "name": "deletedBy"
            },
            {
              "name": "diff"
            },
            {
              "name": "editedAt"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "CommentAuthorAssociation",
          "kind": "ENUM",
          "description": "A comment author association with repository.",
          "fields": null
        },
        {
          "name": "CommentCannotUpdateReason",
          "kind": "ENUM",
          "description": "The possible errors that will prevent a user from updating a comment.",
          "fields": null
        },
        {
          "name": "LabelConnection",
          "kind": "OBJECT",
          "description": "The connection type for Label.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "LabelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Label",
          "kind": "OBJECT",
          "description": "A label for categorizing Issues or Milestones with a given Repository.",
          "fields": [
            {
              "name": "color"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "isDefault"
            },
            {
              "name": "issues"
            },
            {
              "name": "name"
            },
            {
              "name": "pullRequests"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "IssueConnection",
          "kind": "OBJECT",
          "description": "The connection type for Issue.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "IssueEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "IssueOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of issues can be ordered upon return.",
          "fields": null
        },
        {
          "name": "IssueOrderField",
          "kind": "ENUM",
          "description": "Properties by which issue connections can be ordered.",
          "fields": null
        },
        {
          "name": "IssueState",
          "kind": "ENUM",
          "description": "The possible states of an issue.",
          "fields": null
        },
        {
          "name": "IssueFilters",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which to filter lists of issues.",
          "fields": null
        },
        {
          "name": "PullRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequest.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequest",
          "kind": "OBJECT",
          "description": "A repository pull request.",
          "fields": [
            {
              "name": "activeLockReason"
            },
            {
              "name": "additions"
            },
            {
              "name": "assignees"
            },
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "baseRef"
            },
            {
              "name": "baseRefName"
            },
            {
              "name": "baseRefOid"
            },
            {
              "name": "baseRepository"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "changedFiles"
            },
            {
              "name": "closed"
            },
            {
              "name": "closedAt"
            },
            {
              "name": "comments"
            },
            {
              "name": "commits"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "deletions"
            },
            {
              "name": "editor"
            },
            {
              "name": "files"
            },
            {
              "name": "headRef"
            },
            {
              "name": "headRefName"
            },
            {
              "name": "headRefOid"
            },
            {
              "name": "headRepository"
            },
            {
              "name": "headRepositoryOwner"
            },
            {
              "name": "hovercard"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isCrossRepository"
            },
            {
              "name": "labels"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "locked"
            },
            {
              "name": "maintainerCanModify"
            },
            {
              "name": "mergeCommit"
            },
            {
              "name": "mergeable"
            },
            {
              "name": "merged"
            },
            {
              "name": "mergedAt"
            },
            {
              "name": "mergedBy"
            },
            {
              "name": "milestone"
            },
            {
              "name": "number"
            },
            {
              "name": "participants"
            },
            {
              "name": "permalink"
            },
            {
              "name": "potentialMergeCommit"
            },
            {
              "name": "projectCards"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "revertResourcePath"
            },
            {
              "name": "revertUrl"
            },
            {
              "name": "reviewRequests"
            },
            {
              "name": "reviewThreads"
            },
            {
              "name": "reviews"
            },
            {
              "name": "state"
            },
            {
              "name": "suggestedReviewers"
            },
            {
              "name": "timelineItems"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanApplySuggestion"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            },
            {
              "name": "viewerSubscription"
            }
          ]
        },
        {
          "name": "LockReason",
          "kind": "ENUM",
          "description": "The possible reasons that an issue or pull request was locked.",
          "fields": null
        },
        {
          "name": "App",
          "kind": "OBJECT",
          "description": "A GitHub App.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "logoBackgroundColor"
            },
            {
              "name": "logoUrl"
            },
            {
              "name": "name"
            },
            {
              "name": "slug"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "MarketplaceListing",
          "kind": "OBJECT",
          "description": "A listing in the GitHub integration marketplace.",
          "fields": [
            {
              "name": "app"
            },
            {
              "name": "companyUrl"
            },
            {
              "name": "configurationResourcePath"
            },
            {
              "name": "configurationUrl"
            },
            {
              "name": "documentationUrl"
            },
            {
              "name": "extendedDescription"
            },
            {
              "name": "extendedDescriptionHTML"
            },
            {
              "name": "fullDescription"
            },
            {
              "name": "fullDescriptionHTML"
            },
            {
              "name": "hasPublishedFreeTrialPlans"
            },
            {
              "name": "hasTermsOfService"
            },
            {
              "name": "howItWorks"
            },
            {
              "name": "howItWorksHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "installationUrl"
            },
            {
              "name": "installedForViewer"
            },
            {
              "name": "isArchived"
            },
            {
              "name": "isDraft"
            },
            {
              "name": "isPaid"
            },
            {
              "name": "isPublic"
            },
            {
              "name": "isRejected"
            },
            {
              "name": "isUnverified"
            },
            {
              "name": "isUnverifiedPending"
            },
            {
              "name": "isVerificationPendingFromDraft"
            },
            {
              "name": "isVerificationPendingFromUnverified"
            },
            {
              "name": "isVerified"
            },
            {
              "name": "logoBackgroundColor"
            },
            {
              "name": "logoUrl"
            },
            {
              "name": "name"
            },
            {
              "name": "normalizedShortDescription"
            },
            {
              "name": "pricingUrl"
            },
            {
              "name": "primaryCategory"
            },
            {
              "name": "privacyPolicyUrl"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "screenshotUrls"
            },
            {
              "name": "secondaryCategory"
            },
            {
              "name": "shortDescription"
            },
            {
              "name": "slug"
            },
            {
              "name": "statusUrl"
            },
            {
              "name": "supportEmail"
            },
            {
              "name": "supportUrl"
            },
            {
              "name": "termsOfServiceUrl"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanAddPlans"
            },
            {
              "name": "viewerCanApprove"
            },
            {
              "name": "viewerCanDelist"
            },
            {
              "name": "viewerCanEdit"
            },
            {
              "name": "viewerCanEditCategories"
            },
            {
              "name": "viewerCanEditPlans"
            },
            {
              "name": "viewerCanRedraft"
            },
            {
              "name": "viewerCanReject"
            },
            {
              "name": "viewerCanRequestApproval"
            },
            {
              "name": "viewerHasPurchased"
            },
            {
              "name": "viewerHasPurchasedForAllOrganizations"
            },
            {
              "name": "viewerIsListingAdmin"
            }
          ]
        },
        {
          "name": "SponsorsTier",
          "kind": "OBJECT",
          "description": "A GitHub Sponsors tier associated with a GitHub Sponsors listing.",
          "fields": [
            {
              "name": "adminInfo"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "monthlyPriceInCents"
            },
            {
              "name": "monthlyPriceInDollars"
            },
            {
              "name": "name"
            },
            {
              "name": "sponsorsListing"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "SponsorsListing",
          "kind": "OBJECT",
          "description": "A GitHub Sponsors listing.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "fullDescription"
            },
            {
              "name": "fullDescriptionHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "shortDescription"
            },
            {
              "name": "slug"
            },
            {
              "name": "tiers"
            }
          ]
        },
        {
          "name": "Sponsorable",
          "kind": "INTERFACE",
          "description": "Entities that can be sponsored through GitHub Sponsors",
          "fields": [
            {
              "name": "sponsorsListing"
            },
            {
              "name": "sponsorshipsAsMaintainer"
            },
            {
              "name": "sponsorshipsAsSponsor"
            }
          ]
        },
        {
          "name": "SponsorsTierConnection",
          "kind": "OBJECT",
          "description": "The connection type for SponsorsTier.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SponsorsTierEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Sponsorship",
          "kind": "OBJECT",
          "description": "A sponsorship relationship between a sponsor and a maintainer",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "maintainer"
            },
            {
              "name": "privacyLevel"
            },
            {
              "name": "sponsor"
            },
            {
              "name": "tier"
            }
          ]
        },
        {
          "name": "SponsorshipPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a sponsorship",
          "fields": null
        },
        {
          "name": "SponsorshipConnection",
          "kind": "OBJECT",
          "description": "The connection type for Sponsorship.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SponsorshipEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SponsorshipOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for sponsorship connections.",
          "fields": null
        },
        {
          "name": "SponsorshipOrderField",
          "kind": "ENUM",
          "description": "Properties by which sponsorship connections can be ordered.",
          "fields": null
        },
        {
          "name": "Organization",
          "kind": "OBJECT",
          "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
          "fields": [
            {
              "name": "anyPinnableItems"
            },
            {
              "name": "auditLog"
            },
            {
              "name": "avatarUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "isVerified"
            },
            {
              "name": "itemShowcase"
            },
            {
              "name": "location"
            },
            {
              "name": "login"
            },
            {
              "name": "memberStatuses"
            },
            {
              "name": "membersWithRole"
            },
            {
              "name": "name"
            },
            {
              "name": "newTeamResourcePath"
            },
            {
              "name": "newTeamUrl"
            },
            {
              "name": "organizationBillingEmail"
            },
            {
              "name": "pendingMembers"
            },
            {
              "name": "pinnableItems"
            },
            {
              "name": "pinnedItems"
            },
            {
              "name": "pinnedItemsRemaining"
            },
            {
              "name": "project"
            },
            {
              "name": "projects"
            },
            {
              "name": "projectsResourcePath"
            },
            {
              "name": "projectsUrl"
            },
            {
              "name": "repositories"
            },
            {
              "name": "repository"
            },
            {
              "name": "requiresTwoFactorAuthentication"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "samlIdentityProvider"
            },
            {
              "name": "sponsorsListing"
            },
            {
              "name": "sponsorshipsAsMaintainer"
            },
            {
              "name": "sponsorshipsAsSponsor"
            },
            {
              "name": "team"
            },
            {
              "name": "teams"
            },
            {
              "name": "teamsResourcePath"
            },
            {
              "name": "teamsUrl"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanAdminister"
            },
            {
              "name": "viewerCanChangePinnedItems"
            },
            {
              "name": "viewerCanCreateProjects"
            },
            {
              "name": "viewerCanCreateRepositories"
            },
            {
              "name": "viewerCanCreateTeams"
            },
            {
              "name": "viewerIsAMember"
            },
            {
              "name": "websiteUrl"
            }
          ]
        },
        {
          "name": "RegistryPackageVersion",
          "kind": "OBJECT",
          "description": "A package version contains the information about a specific package version.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "Release",
          "kind": "OBJECT",
          "description": "A release contains the content for a release.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "isDraft"
            },
            {
              "name": "isPrerelease"
            },
            {
              "name": "name"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "releaseAssets"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "shortDescriptionHTML"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagName"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "Ref",
          "kind": "OBJECT",
          "description": "Represents a Git reference.",
          "fields": [
            {
              "name": "associatedPullRequests"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "prefix"
            },
            {
              "name": "repository"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "GitObject",
          "kind": "INTERFACE",
          "description": "Represents a Git object.",
          "fields": [
            {
              "name": "abbreviatedOid"
            },
            {
              "name": "commitResourcePath"
            },
            {
              "name": "commitUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "oid"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "GitObjectID",
          "kind": "SCALAR",
          "description": "A Git object ID.",
          "fields": null
        },
        {
          "name": "Blob",
          "kind": "OBJECT",
          "description": "Represents a Git blob.",
          "fields": [
            {
              "name": "abbreviatedOid"
            },
            {
              "name": "byteSize"
            },
            {
              "name": "commitResourcePath"
            },
            {
              "name": "commitUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "isBinary"
            },
            {
              "name": "isTruncated"
            },
            {
              "name": "oid"
            },
            {
              "name": "repository"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "RepositoryNode",
          "kind": "INTERFACE",
          "description": "Represents a object that belongs to a repository.",
          "fields": [
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "Commit",
          "kind": "OBJECT",
          "description": "Represents a Git commit.",
          "fields": [
            {
              "name": "abbreviatedOid"
            },
            {
              "name": "additions"
            },
            {
              "name": "associatedPullRequests"
            },
            {
              "name": "author"
            },
            {
              "name": "authoredByCommitter"
            },
            {
              "name": "authoredDate"
            },
            {
              "name": "blame"
            },
            {
              "name": "changedFiles"
            },
            {
              "name": "comments"
            },
            {
              "name": "commitResourcePath"
            },
            {
              "name": "commitUrl"
            },
            {
              "name": "committedDate"
            },
            {
              "name": "committedViaWeb"
            },
            {
              "name": "committer"
            },
            {
              "name": "deletions"
            },
            {
              "name": "deployments"
            },
            {
              "name": "history"
            },
            {
              "name": "id"
            },
            {
              "name": "message"
            },
            {
              "name": "messageBody"
            },
            {
              "name": "messageBodyHTML"
            },
            {
              "name": "messageHeadline"
            },
            {
              "name": "messageHeadlineHTML"
            },
            {
              "name": "oid"
            },
            {
              "name": "parents"
            },
            {
              "name": "pushedDate"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "signature"
            },
            {
              "name": "status"
            },
            {
              "name": "tarballUrl"
            },
            {
              "name": "tree"
            },
            {
              "name": "treeResourcePath"
            },
            {
              "name": "treeUrl"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerSubscription"
            },
            {
              "name": "zipballUrl"
            }
          ]
        },
        {
          "name": "SubscriptionState",
          "kind": "ENUM",
          "description": "The possible states of a subscription.",
          "fields": null
        },
        {
          "name": "Tree",
          "kind": "OBJECT",
          "description": "Represents a Git tree.",
          "fields": [
            {
              "name": "abbreviatedOid"
            },
            {
              "name": "commitResourcePath"
            },
            {
              "name": "commitUrl"
            },
            {
              "name": "entries"
            },
            {
              "name": "id"
            },
            {
              "name": "oid"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "TreeEntry",
          "kind": "OBJECT",
          "description": "Represents a Git tree entry.",
          "fields": [
            {
              "name": "mode"
            },
            {
              "name": "name"
            },
            {
              "name": "object"
            },
            {
              "name": "oid"
            },
            {
              "name": "repository"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "GitActor",
          "kind": "OBJECT",
          "description": "Represents an actor in a Git commit (ie. an author or committer).",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "date"
            },
            {
              "name": "email"
            },
            {
              "name": "name"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "GitTimestamp",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
          "fields": null
        },
        {
          "name": "CommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CommitHistoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CommitAuthor",
          "kind": "INPUT_OBJECT",
          "description": "Specifies an author for filtering Git commits.",
          "fields": null
        },
        {
          "name": "CommitCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for CommitComment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CommitCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CommitComment",
          "kind": "OBJECT",
          "description": "Represents a comment on a given Commit.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "commit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isMinimized"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "minimizedReason"
            },
            {
              "name": "path"
            },
            {
              "name": "position"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanMinimize"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "ReactionGroup",
          "kind": "OBJECT",
          "description": "A group of emoji reactions to a particular piece of content.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "subject"
            },
            {
              "name": "users"
            },
            {
              "name": "viewerHasReacted"
            }
          ]
        },
        {
          "name": "ReactionContent",
          "kind": "ENUM",
          "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
          "fields": null
        },
        {
          "name": "Reactable",
          "kind": "INTERFACE",
          "description": "Represents a subject that can be reacted on.",
          "fields": [
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "viewerCanReact"
            }
          ]
        },
        {
          "name": "ReactionConnection",
          "kind": "OBJECT",
          "description": "A list of reactions that have been left on the subject.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "viewerHasReacted"
            }
          ]
        },
        {
          "name": "ReactionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Reaction",
          "kind": "OBJECT",
          "description": "An emoji reaction to a particular piece of content.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "reactable"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ReactionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of reactions can be ordered upon return.",
          "fields": null
        },
        {
          "name": "ReactionOrderField",
          "kind": "ENUM",
          "description": "A list of fields that reactions can be ordered by.",
          "fields": null
        },
        {
          "name": "ReactingUserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ReactingUserEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's made a reaction.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "reactedAt"
            }
          ]
        },
        {
          "name": "RepositoryVisibility",
          "kind": "ENUM",
          "description": "The repository's visibility level.",
          "fields": null
        },
        {
          "name": "RepositoryLockReason",
          "kind": "ENUM",
          "description": "The possible reasons a given repository could be in a locked state.",
          "fields": null
        },
        {
          "name": "License",
          "kind": "OBJECT",
          "description": "A repository's open source license",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "conditions"
            },
            {
              "name": "description"
            },
            {
              "name": "featured"
            },
            {
              "name": "hidden"
            },
            {
              "name": "id"
            },
            {
              "name": "implementation"
            },
            {
              "name": "key"
            },
            {
              "name": "limitations"
            },
            {
              "name": "name"
            },
            {
              "name": "nickname"
            },
            {
              "name": "permissions"
            },
            {
              "name": "pseudoLicense"
            },
            {
              "name": "spdxId"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "LicenseRule",
          "kind": "OBJECT",
          "description": "Describes a License's conditions, permissions, and limitations",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "key"
            },
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "RepositoryOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Repository.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "login"
            },
            {
              "name": "repositories"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "RepositoryConnection",
          "kind": "OBJECT",
          "description": "A list of repositories owned by the subject.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "totalDiskUsage"
            }
          ]
        },
        {
          "name": "RepositoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RepositoryPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepositoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for repository connections",
          "fields": null
        },
        {
          "name": "RepositoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which repository connections can be ordered.",
          "fields": null
        },
        {
          "name": "RepositoryAffiliation",
          "kind": "ENUM",
          "description": "The affiliation of a user to a repository",
          "fields": null
        },
        {
          "name": "RepositoryTopicConnection",
          "kind": "OBJECT",
          "description": "The connection type for RepositoryTopic.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RepositoryTopicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RepositoryTopic",
          "kind": "OBJECT",
          "description": "A repository-topic connects a repository to a topic.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "topic"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "Topic",
          "kind": "OBJECT",
          "description": "A topic aggregates entities that are related to a subject.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "relatedTopics"
            },
            {
              "name": "stargazers"
            },
            {
              "name": "viewerHasStarred"
            }
          ]
        },
        {
          "name": "StargazerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "StargazerEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's starred a repository.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "starredAt"
            }
          ]
        },
        {
          "name": "StarOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which star connections can be ordered.",
          "fields": null
        },
        {
          "name": "StarOrderField",
          "kind": "ENUM",
          "description": "Properties by which star connections can be ordered.",
          "fields": null
        },
        {
          "name": "Starrable",
          "kind": "INTERFACE",
          "description": "Things that can be starred.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "stargazers"
            },
            {
              "name": "viewerHasStarred"
            }
          ]
        },
        {
          "name": "RepositoryInfo",
          "kind": "INTERFACE",
          "description": "A subset of repository info.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "forkCount"
            },
            {
              "name": "hasIssuesEnabled"
            },
            {
              "name": "hasProjectsEnabled"
            },
            {
              "name": "hasWikiEnabled"
            },
            {
              "name": "homepageUrl"
            },
            {
              "name": "isArchived"
            },
            {
              "name": "isFork"
            },
            {
              "name": "isLocked"
            },
            {
              "name": "isMirror"
            },
            {
              "name": "isPrivate"
            },
            {
              "name": "isTemplate"
            },
            {
              "name": "licenseInfo"
            },
            {
              "name": "lockReason"
            },
            {
              "name": "mirrorUrl"
            },
            {
              "name": "name"
            },
            {
              "name": "nameWithOwner"
            },
            {
              "name": "openGraphImageUrl"
            },
            {
              "name": "owner"
            },
            {
              "name": "pushedAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "shortDescriptionHTML"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "usesCustomOpenGraphImage"
            }
          ]
        },
        {
          "name": "Comment",
          "kind": "INTERFACE",
          "description": "Represents a comment.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "Deletable",
          "kind": "INTERFACE",
          "description": "Entities that can be deleted.",
          "fields": [
            {
              "name": "viewerCanDelete"
            }
          ]
        },
        {
          "name": "Updatable",
          "kind": "INTERFACE",
          "description": "Entities that can be updated.",
          "fields": [
            {
              "name": "viewerCanUpdate"
            }
          ]
        },
        {
          "name": "UpdatableComment",
          "kind": "INTERFACE",
          "description": "Comments that can be updated.",
          "fields": [
            {
              "name": "viewerCannotUpdateReasons"
            }
          ]
        },
        {
          "name": "GitSignature",
          "kind": "INTERFACE",
          "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
          "fields": [
            {
              "name": "email"
            },
            {
              "name": "isValid"
            },
            {
              "name": "payload"
            },
            {
              "name": "signature"
            },
            {
              "name": "signer"
            },
            {
              "name": "state"
            },
            {
              "name": "wasSignedByGitHub"
            }
          ]
        },
        {
          "name": "GitSignatureState",
          "kind": "ENUM",
          "description": "The state of a Git signature.",
          "fields": null
        },
        {
          "name": "Status",
          "kind": "OBJECT",
          "description": "Represents a commit status.",
          "fields": [
            {
              "name": "commit"
            },
            {
              "name": "context"
            },
            {
              "name": "contexts"
            },
            {
              "name": "id"
            },
            {
              "name": "state"
            }
          ]
        },
        {
          "name": "StatusState",
          "kind": "ENUM",
          "description": "The possible commit status states.",
          "fields": null
        },
        {
          "name": "StatusContext",
          "kind": "OBJECT",
          "description": "Represents an individual commit status context",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "commit"
            },
            {
              "name": "context"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "state"
            },
            {
              "name": "targetUrl"
            }
          ]
        },
        {
          "name": "Bot",
          "kind": "OBJECT",
          "description": "A special type of user which takes actions on behalf of GitHub Apps.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "login"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "Float",
          "kind": "SCALAR",
          "description": "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null
        },
        {
          "name": "PullRequestState",
          "kind": "ENUM",
          "description": "The possible states of a pull request.",
          "fields": null
        },
        {
          "name": "Blame",
          "kind": "OBJECT",
          "description": "Represents a Git blame.",
          "fields": [
            {
              "name": "ranges"
            }
          ]
        },
        {
          "name": "BlameRange",
          "kind": "OBJECT",
          "description": "Represents a range of information from a Git blame.",
          "fields": [
            {
              "name": "age"
            },
            {
              "name": "commit"
            },
            {
              "name": "endingLine"
            },
            {
              "name": "startingLine"
            }
          ]
        },
        {
          "name": "DeploymentConnection",
          "kind": "OBJECT",
          "description": "The connection type for Deployment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "DeploymentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Deployment",
          "kind": "OBJECT",
          "description": "Represents triggered deployment instance.",
          "fields": [
            {
              "name": "commit"
            },
            {
              "name": "commitOid"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "description"
            },
            {
              "name": "environment"
            },
            {
              "name": "id"
            },
            {
              "name": "latestStatus"
            },
            {
              "name": "payload"
            },
            {
              "name": "ref"
            },
            {
              "name": "repository"
            },
            {
              "name": "state"
            },
            {
              "name": "statuses"
            },
            {
              "name": "task"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "DeploymentStatusConnection",
          "kind": "OBJECT",
          "description": "The connection type for DeploymentStatus.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "DeploymentStatusEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "DeploymentStatus",
          "kind": "OBJECT",
          "description": "Describes the status of a given deployment attempt.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "deployment"
            },
            {
              "name": "description"
            },
            {
              "name": "environmentUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "logUrl"
            },
            {
              "name": "state"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "DeploymentStatusState",
          "kind": "ENUM",
          "description": "The possible states for a deployment status.",
          "fields": null
        },
        {
          "name": "DeploymentState",
          "kind": "ENUM",
          "description": "The possible states in which a deployment can be.",
          "fields": null
        },
        {
          "name": "DeploymentOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for deployment connections",
          "fields": null
        },
        {
          "name": "DeploymentOrderField",
          "kind": "ENUM",
          "description": "Properties by which deployment connections can be ordered.",
          "fields": null
        },
        {
          "name": "PullRequestOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of issues can be ordered upon return.",
          "fields": null
        },
        {
          "name": "PullRequestOrderField",
          "kind": "ENUM",
          "description": "Properties by which pull_requests connections can be ordered.",
          "fields": null
        },
        {
          "name": "Subscribable",
          "kind": "INTERFACE",
          "description": "Entities that can be subscribed to for web and email notifications.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerSubscription"
            }
          ]
        },
        {
          "name": "ReleaseAssetConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseAsset.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ReleaseAssetEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReleaseAsset",
          "kind": "OBJECT",
          "description": "A release asset contains the content for a release asset.",
          "fields": [
            {
              "name": "contentType"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "downloadCount"
            },
            {
              "name": "downloadUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "release"
            },
            {
              "name": "size"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "uploadedBy"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "RegistryPackageVersionConnection",
          "kind": "OBJECT",
          "description": "The connection type for RegistryPackageVersion.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RegistryPackageVersionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RegistryPackageMetadatum",
          "kind": "INPUT_OBJECT",
          "description": "Represents a single registry metadatum",
          "fields": null
        },
        {
          "name": "TopicConnection",
          "kind": "OBJECT",
          "description": "The connection type for Topic.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TopicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "MarketplaceCategory",
          "kind": "OBJECT",
          "description": "A public description of a Marketplace category.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "howItWorks"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "primaryListingCount"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "secondaryListingCount"
            },
            {
              "name": "slug"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "MarketplaceListingConnection",
          "kind": "OBJECT",
          "description": "Look up Marketplace Listings",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "MarketplaceListingEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReleaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for Release.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ReleaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReleaseOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of releases can be ordered upon return.",
          "fields": null
        },
        {
          "name": "ReleaseOrderField",
          "kind": "ENUM",
          "description": "Properties by which release connections can be ordered.",
          "fields": null
        },
        {
          "name": "RegistryPackageVersionStatistics",
          "kind": "OBJECT",
          "description": "Represents a object that contains package version activity statistics such as downloads.",
          "fields": []
        },
        {
          "name": "RegistryPackageDependencyConnection",
          "kind": "OBJECT",
          "description": "The connection type for RegistryPackageDependency.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RegistryPackageDependencyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RegistryPackageDependency",
          "kind": "OBJECT",
          "description": "A package dependency contains the information needed to satisfy a dependency.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "RegistryPackageDependencyType",
          "kind": "ENUM",
          "description": "The possible types of a registry package dependency.",
          "fields": null
        },
        {
          "name": "RegistryPackageFileConnection",
          "kind": "OBJECT",
          "description": "The connection type for RegistryPackageFile.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RegistryPackageFileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RegistryPackageFile",
          "kind": "OBJECT",
          "description": "A file in a specific registry package version.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "UserStatusConnection",
          "kind": "OBJECT",
          "description": "The connection type for UserStatus.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "UserStatusEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "UserStatus",
          "kind": "OBJECT",
          "description": "The user's description of what they're currently doing.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "emoji"
            },
            {
              "name": "emojiHTML"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "id"
            },
            {
              "name": "indicatesLimitedAvailability"
            },
            {
              "name": "message"
            },
            {
              "name": "organization"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UserStatusOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for user status connections.",
          "fields": null
        },
        {
          "name": "UserStatusOrderField",
          "kind": "ENUM",
          "description": "Properties by which user status connections can be ordered.",
          "fields": null
        },
        {
          "name": "ProfileItemShowcase",
          "kind": "OBJECT",
          "description": "A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.",
          "fields": [
            {
              "name": "hasPinnedItems"
            },
            {
              "name": "items"
            }
          ]
        },
        {
          "name": "PinnableItemConnection",
          "kind": "OBJECT",
          "description": "The connection type for PinnableItem.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PinnableItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PinnableItem",
          "kind": "UNION",
          "description": "Types that can be pinned to a profile page.",
          "fields": null
        },
        {
          "name": "Gist",
          "kind": "OBJECT",
          "description": "A Gist.",
          "fields": [
            {
              "name": "comments"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "files"
            },
            {
              "name": "forks"
            },
            {
              "name": "id"
            },
            {
              "name": "isFork"
            },
            {
              "name": "isPublic"
            },
            {
              "name": "name"
            },
            {
              "name": "owner"
            },
            {
              "name": "pushedAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "stargazers"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerHasStarred"
            }
          ]
        },
        {
          "name": "GistCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for GistComment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "GistCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "GistComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Gist.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "gist"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isMinimized"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "minimizedReason"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanMinimize"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "GistConnection",
          "kind": "OBJECT",
          "description": "The connection type for Gist.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "GistEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "GistOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for gist connections",
          "fields": null
        },
        {
          "name": "GistOrderField",
          "kind": "ENUM",
          "description": "Properties by which gist connections can be ordered.",
          "fields": null
        },
        {
          "name": "GistFile",
          "kind": "OBJECT",
          "description": "A file in a gist.",
          "fields": [
            {
              "name": "encodedName"
            },
            {
              "name": "encoding"
            },
            {
              "name": "extension"
            },
            {
              "name": "isImage"
            },
            {
              "name": "isTruncated"
            },
            {
              "name": "language"
            },
            {
              "name": "name"
            },
            {
              "name": "size"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "Language",
          "kind": "OBJECT",
          "description": "Represents a given language found in repositories.",
          "fields": [
            {
              "name": "color"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "PinnableItemType",
          "kind": "ENUM",
          "description": "Represents items that can be pinned to a profile page or dashboard.",
          "fields": null
        },
        {
          "name": "OrganizationAuditEntryConnection",
          "kind": "OBJECT",
          "description": "The connection type for OrganizationAuditEntry.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "OrganizationAuditEntryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "OrganizationAuditEntry",
          "kind": "UNION",
          "description": "An audit entry in an organization audit log.",
          "fields": null
        },
        {
          "name": "OperationType",
          "kind": "ENUM",
          "description": "The corresponding operation type for the action",
          "fields": null
        },
        {
          "name": "AuditEntryActor",
          "kind": "UNION",
          "description": "Types that can initiate an audit log event.",
          "fields": null
        },
        {
          "name": "ActorLocation",
          "kind": "OBJECT",
          "description": "Location information for an actor",
          "fields": [
            {
              "name": "city"
            },
            {
              "name": "country"
            },
            {
              "name": "countryCode"
            },
            {
              "name": "region"
            },
            {
              "name": "regionCode"
            }
          ]
        },
        {
          "name": "PreciseDateTime",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded UTC date string with millisecond precison.",
          "fields": null
        },
        {
          "name": "AuditEntry",
          "kind": "INTERFACE",
          "description": "An entry in the audit log.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "operationType"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrganizationAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry with action org.*",
          "fields": [
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            }
          ]
        },
        {
          "name": "IssueComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Issue.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isMinimized"
            },
            {
              "name": "issue"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "minimizedReason"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanMinimize"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "IssuePubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for an issue.",
          "fields": null
        },
        {
          "name": "MembersCanDeleteReposClearAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a members_can_delete_repos.clear event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "Enterprise",
          "kind": "OBJECT",
          "description": "An account to manage multiple organizations with consolidated policy and billing.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "billingInfo"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "description"
            },
            {
              "name": "descriptionHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "location"
            },
            {
              "name": "members"
            },
            {
              "name": "name"
            },
            {
              "name": "organizations"
            },
            {
              "name": "ownerInfo"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "userAccounts"
            },
            {
              "name": "viewerIsAdmin"
            },
            {
              "name": "websiteUrl"
            }
          ]
        },
        {
          "name": "EnterpriseMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseMember.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseMemberEdge",
          "kind": "OBJECT",
          "description": "A User who is a member of an enterprise through one or more organizations.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "isUnlicensed"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseMember",
          "kind": "UNION",
          "description": "An object that is a member of an enterprise.",
          "fields": null
        },
        {
          "name": "EnterpriseUserAccount",
          "kind": "OBJECT",
          "description": "An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "id"
            },
            {
              "name": "login"
            },
            {
              "name": "name"
            },
            {
              "name": "organizations"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "EnterpriseOrganizationMembershipConnection",
          "kind": "OBJECT",
          "description": "The connection type for Organization.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseOrganizationMembershipEdge",
          "kind": "OBJECT",
          "description": "An enterprise organization that a user is a member of.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "EnterpriseUserAccountMembershipRole",
          "kind": "ENUM",
          "description": "The possible roles for enterprise membership.",
          "fields": null
        },
        {
          "name": "OrganizationOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for organization connections.",
          "fields": null
        },
        {
          "name": "OrganizationOrderField",
          "kind": "ENUM",
          "description": "Properties by which organization connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseServerInstallation",
          "kind": "OBJECT",
          "description": "An Enterprise Server installation.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "customerName"
            },
            {
              "name": "hostName"
            },
            {
              "name": "id"
            },
            {
              "name": "isConnected"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "userAccounts"
            },
            {
              "name": "userAccountsUploads"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseServerUserAccount.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccount",
          "kind": "OBJECT",
          "description": "A user account on an Enterprise Server installation.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "emails"
            },
            {
              "name": "enterpriseServerInstallation"
            },
            {
              "name": "id"
            },
            {
              "name": "isSiteAdmin"
            },
            {
              "name": "login"
            },
            {
              "name": "profileName"
            },
            {
              "name": "remoteCreatedAt"
            },
            {
              "name": "remoteUserId"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountEmailConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseServerUserAccountEmail.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountEmailEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountEmail",
          "kind": "OBJECT",
          "description": "An email belonging to a user account on an Enterprise Server installation.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "isPrimary"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "userAccount"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountEmailOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Enterprise Server user account email connections.",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountEmailOrderField",
          "kind": "ENUM",
          "description": "Properties by which Enterprise Server user account email connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Enterprise Server user account connections.",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountOrderField",
          "kind": "ENUM",
          "description": "Properties by which Enterprise Server user account connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountsUploadConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseServerUserAccountsUpload.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountsUploadEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountsUpload",
          "kind": "OBJECT",
          "description": "A user accounts upload from an Enterprise Server installation.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "enterpriseServerInstallation"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "syncState"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "EnterpriseServerUserAccountsUploadSyncState",
          "kind": "ENUM",
          "description": "Synchronization state of the Enterprise Server user accounts upload",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountsUploadOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Enterprise Server user accounts upload connections.",
          "fields": null
        },
        {
          "name": "EnterpriseServerUserAccountsUploadOrderField",
          "kind": "ENUM",
          "description": "Properties by which Enterprise Server user accounts upload connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseServerInstallationOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Enterprise Server installation connections.",
          "fields": null
        },
        {
          "name": "EnterpriseServerInstallationOrderField",
          "kind": "ENUM",
          "description": "Properties by which Enterprise Server installation connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseMemberOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for enterprise member connections.",
          "fields": null
        },
        {
          "name": "EnterpriseMemberOrderField",
          "kind": "ENUM",
          "description": "Properties by which enterprise member connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseUserDeployment",
          "kind": "ENUM",
          "description": "The possible GitHub Enterprise deployments where this user can exist.",
          "fields": null
        },
        {
          "name": "OrganizationConnection",
          "kind": "OBJECT",
          "description": "The connection type for Organization.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "OrganizationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseOwnerInfo",
          "kind": "OBJECT",
          "description": "Enterprise information only visible to enterprise owners.",
          "fields": [
            {
              "name": "actionExecutionCapabilitySettingOrganizations"
            },
            {
              "name": "admins"
            },
            {
              "name": "affiliatedUsersWithTwoFactorDisabled"
            },
            {
              "name": "affiliatedUsersWithTwoFactorDisabledExist"
            },
            {
              "name": "allowPrivateRepositoryForkingSetting"
            },
            {
              "name": "allowPrivateRepositoryForkingSettingOrganizations"
            },
            {
              "name": "defaultRepositoryPermissionSetting"
            },
            {
              "name": "defaultRepositoryPermissionSettingOrganizations"
            },
            {
              "name": "enterpriseServerInstallations"
            },
            {
              "name": "isUpdatingDefaultRepositoryPermission"
            },
            {
              "name": "isUpdatingTwoFactorRequirement"
            },
            {
              "name": "membersCanChangeRepositoryVisibilitySetting"
            },
            {
              "name": "membersCanChangeRepositoryVisibilitySettingOrganizations"
            },
            {
              "name": "membersCanCreateInternalRepositoriesSetting"
            },
            {
              "name": "membersCanCreatePrivateRepositoriesSetting"
            },
            {
              "name": "membersCanCreatePublicRepositoriesSetting"
            },
            {
              "name": "membersCanCreateRepositoriesSetting"
            },
            {
              "name": "membersCanCreateRepositoriesSettingOrganizations"
            },
            {
              "name": "membersCanDeleteIssuesSetting"
            },
            {
              "name": "membersCanDeleteIssuesSettingOrganizations"
            },
            {
              "name": "membersCanDeleteRepositoriesSetting"
            },
            {
              "name": "membersCanDeleteRepositoriesSettingOrganizations"
            },
            {
              "name": "membersCanInviteCollaboratorsSetting"
            },
            {
              "name": "membersCanInviteCollaboratorsSettingOrganizations"
            },
            {
              "name": "membersCanMakePurchasesSetting"
            },
            {
              "name": "membersCanUpdateProtectedBranchesSetting"
            },
            {
              "name": "membersCanUpdateProtectedBranchesSettingOrganizations"
            },
            {
              "name": "membersCanViewDependencyInsightsSetting"
            },
            {
              "name": "membersCanViewDependencyInsightsSettingOrganizations"
            },
            {
              "name": "organizationProjectsSetting"
            },
            {
              "name": "organizationProjectsSettingOrganizations"
            },
            {
              "name": "outsideCollaborators"
            },
            {
              "name": "pendingAdminInvitations"
            },
            {
              "name": "pendingCollaborators"
            },
            {
              "name": "pendingMemberInvitations"
            },
            {
              "name": "repositoryProjectsSetting"
            },
            {
              "name": "repositoryProjectsSettingOrganizations"
            },
            {
              "name": "samlIdentityProvider"
            },
            {
              "name": "samlIdentityProviderSettingOrganizations"
            },
            {
              "name": "teamDiscussionsSetting"
            },
            {
              "name": "teamDiscussionsSettingOrganizations"
            },
            {
              "name": "twoFactorRequiredSetting"
            },
            {
              "name": "twoFactorRequiredSettingOrganizations"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorEdge",
          "kind": "OBJECT",
          "description": "A User who is an administrator of an enterprise.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorRole",
          "kind": "ENUM",
          "description": "The possible administrator roles in an enterprise account.",
          "fields": null
        },
        {
          "name": "EnterpriseAdministratorInvitationConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseAdministratorInvitation.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorInvitationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorInvitation",
          "kind": "OBJECT",
          "description": "An invitation for a user to become an owner or billing manager of an enterprise.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "email"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "id"
            },
            {
              "name": "invitee"
            },
            {
              "name": "inviter"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "EnterpriseAdministratorInvitationOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for enterprise administrator invitation connections",
          "fields": null
        },
        {
          "name": "EnterpriseAdministratorInvitationOrderField",
          "kind": "ENUM",
          "description": "Properties by which enterprise administrator invitation connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterprisePendingMemberInvitationConnection",
          "kind": "OBJECT",
          "description": "The connection type for OrganizationInvitation.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "totalUniqueUserCount"
            }
          ]
        },
        {
          "name": "EnterprisePendingMemberInvitationEdge",
          "kind": "OBJECT",
          "description": "An invitation to be a member in an enterprise organization.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "isUnlicensed"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "OrganizationInvitation",
          "kind": "OBJECT",
          "description": "An Invitation for a user to an organization.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "invitationType"
            },
            {
              "name": "invitee"
            },
            {
              "name": "inviter"
            },
            {
              "name": "organization"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "OrganizationInvitationType",
          "kind": "ENUM",
          "description": "The possible organization invitation types.",
          "fields": null
        },
        {
          "name": "OrganizationInvitationRole",
          "kind": "ENUM",
          "description": "The possible organization invitation roles.",
          "fields": null
        },
        {
          "name": "TeamConnection",
          "kind": "OBJECT",
          "description": "The connection type for Team.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TeamEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Team",
          "kind": "OBJECT",
          "description": "A team of users in an organization.",
          "fields": [
            {
              "name": "ancestors"
            },
            {
              "name": "avatarUrl"
            },
            {
              "name": "childTeams"
            },
            {
              "name": "combinedSlug"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "discussion"
            },
            {
              "name": "discussions"
            },
            {
              "name": "discussionsResourcePath"
            },
            {
              "name": "discussionsUrl"
            },
            {
              "name": "editTeamResourcePath"
            },
            {
              "name": "editTeamUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "invitations"
            },
            {
              "name": "memberStatuses"
            },
            {
              "name": "members"
            },
            {
              "name": "membersResourcePath"
            },
            {
              "name": "membersUrl"
            },
            {
              "name": "name"
            },
            {
              "name": "newTeamResourcePath"
            },
            {
              "name": "newTeamUrl"
            },
            {
              "name": "organization"
            },
            {
              "name": "parentTeam"
            },
            {
              "name": "privacy"
            },
            {
              "name": "repositories"
            },
            {
              "name": "repositoriesResourcePath"
            },
            {
              "name": "repositoriesUrl"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "slug"
            },
            {
              "name": "teamsResourcePath"
            },
            {
              "name": "teamsUrl"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "viewerCanAdminister"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerSubscription"
            }
          ]
        },
        {
          "name": "TeamPrivacy",
          "kind": "ENUM",
          "description": "The possible team privacy values.",
          "fields": null
        },
        {
          "name": "TeamMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TeamMemberEdge",
          "kind": "OBJECT",
          "description": "Represents a user who is a member of a team.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "memberAccessResourcePath"
            },
            {
              "name": "memberAccessUrl"
            },
            {
              "name": "node"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "TeamMemberRole",
          "kind": "ENUM",
          "description": "The possible team member roles; either 'maintainer' or 'member'.",
          "fields": null
        },
        {
          "name": "TeamMembershipType",
          "kind": "ENUM",
          "description": "Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.",
          "fields": null
        },
        {
          "name": "TeamMemberOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for team member connections",
          "fields": null
        },
        {
          "name": "TeamMemberOrderField",
          "kind": "ENUM",
          "description": "Properties by which team member connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Repository.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TeamRepositoryEdge",
          "kind": "OBJECT",
          "description": "Represents a team repository.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "permission"
            }
          ]
        },
        {
          "name": "RepositoryPermission",
          "kind": "ENUM",
          "description": "The access level to a repository",
          "fields": null
        },
        {
          "name": "TeamRepositoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for team repository connections",
          "fields": null
        },
        {
          "name": "TeamRepositoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which team repository connections can be ordered.",
          "fields": null
        },
        {
          "name": "OrganizationInvitationConnection",
          "kind": "OBJECT",
          "description": "The connection type for OrganizationInvitation.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "OrganizationInvitationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "TeamOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which team connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamOrderField",
          "kind": "ENUM",
          "description": "Properties by which team connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamDiscussionConnection",
          "kind": "OBJECT",
          "description": "The connection type for TeamDiscussion.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TeamDiscussionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "TeamDiscussion",
          "kind": "OBJECT",
          "description": "A team discussion.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "bodyVersion"
            },
            {
              "name": "comments"
            },
            {
              "name": "commentsResourcePath"
            },
            {
              "name": "commentsUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isPinned"
            },
            {
              "name": "isPrivate"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "number"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "team"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanPin"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanSubscribe"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            },
            {
              "name": "viewerSubscription"
            }
          ]
        },
        {
          "name": "TeamDiscussionCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for TeamDiscussionComment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "TeamDiscussionCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "TeamDiscussionComment",
          "kind": "OBJECT",
          "description": "A comment on a team discussion.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "bodyVersion"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "discussion"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "number"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "TeamDiscussionCommentOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which team discussion comment connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamDiscussionCommentOrderField",
          "kind": "ENUM",
          "description": "Properties by which team discussion comment connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamDiscussionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which team discussion connections can be ordered.",
          "fields": null
        },
        {
          "name": "TeamDiscussionOrderField",
          "kind": "ENUM",
          "description": "Properties by which team discussion connections can be ordered.",
          "fields": null
        },
        {
          "name": "MemberStatusable",
          "kind": "INTERFACE",
          "description": "Entities that have members who can set status messages.",
          "fields": [
            {
              "name": "memberStatuses"
            }
          ]
        },
        {
          "name": "EnterpriseOutsideCollaboratorConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseOutsideCollaboratorEdge",
          "kind": "OBJECT",
          "description": "A User who is an outside collaborator of an enterprise through one or more organizations.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "isUnlicensed"
            },
            {
              "name": "node"
            },
            {
              "name": "repositories"
            }
          ]
        },
        {
          "name": "EnterpriseRepositoryInfoConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseRepositoryInfo.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseRepositoryInfoEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseRepositoryInfo",
          "kind": "OBJECT",
          "description": "A subset of repository information queryable from an enterprise.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "isPrivate"
            },
            {
              "name": "name"
            },
            {
              "name": "nameWithOwner"
            }
          ]
        },
        {
          "name": "EnterprisePendingCollaboratorConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterprisePendingCollaboratorEdge",
          "kind": "OBJECT",
          "description": "A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "isUnlicensed"
            },
            {
              "name": "node"
            },
            {
              "name": "repositories"
            }
          ]
        },
        {
          "name": "RepositoryInvitationOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for repository invitation connections.",
          "fields": null
        },
        {
          "name": "RepositoryInvitationOrderField",
          "kind": "ENUM",
          "description": "Properties by which repository invitation connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseDefaultRepositoryPermissionSettingValue",
          "kind": "ENUM",
          "description": "The possible values for the enterprise default repository permission setting.",
          "fields": null
        },
        {
          "name": "DefaultRepositoryPermissionField",
          "kind": "ENUM",
          "description": "The possible default permissions for repositories.",
          "fields": null
        },
        {
          "name": "EnterpriseEnabledDisabledSettingValue",
          "kind": "ENUM",
          "description": "The possible values for an enabled/disabled enterprise setting.",
          "fields": null
        },
        {
          "name": "EnterpriseMembersCanCreateRepositoriesSettingValue",
          "kind": "ENUM",
          "description": "The possible values for the enterprise members can create repositories setting.",
          "fields": null
        },
        {
          "name": "OrganizationMembersCanCreateRepositoriesSettingValue",
          "kind": "ENUM",
          "description": "The possible values for the members can create repositories setting on an organization.",
          "fields": null
        },
        {
          "name": "EnterpriseMembersCanMakePurchasesSettingValue",
          "kind": "ENUM",
          "description": "The possible values for the members can make purchases setting.",
          "fields": null
        },
        {
          "name": "ActionExecutionCapabilitySetting",
          "kind": "ENUM",
          "description": "The possible capabilities for action executions setting.",
          "fields": null
        },
        {
          "name": "EnterpriseEnabledSettingValue",
          "kind": "ENUM",
          "description": "The possible values for an enabled/no policy enterprise setting.",
          "fields": null
        },
        {
          "name": "EnterpriseIdentityProvider",
          "kind": "OBJECT",
          "description": "An identity provider configured to provision identities for an enterprise.",
          "fields": [
            {
              "name": "digestMethod"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "externalIdentities"
            },
            {
              "name": "id"
            },
            {
              "name": "idpCertificate"
            },
            {
              "name": "issuer"
            },
            {
              "name": "recoveryCodes"
            },
            {
              "name": "signatureMethod"
            },
            {
              "name": "ssoUrl"
            }
          ]
        },
        {
          "name": "ExternalIdentityConnection",
          "kind": "OBJECT",
          "description": "The connection type for ExternalIdentity.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ExternalIdentityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ExternalIdentity",
          "kind": "OBJECT",
          "description": "An external identity provisioned by SAML SSO or SCIM.",
          "fields": [
            {
              "name": "guid"
            },
            {
              "name": "id"
            },
            {
              "name": "organizationInvitation"
            },
            {
              "name": "samlIdentity"
            },
            {
              "name": "scimIdentity"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ExternalIdentitySamlAttributes",
          "kind": "OBJECT",
          "description": "SAML attributes for the External Identity",
          "fields": [
            {
              "name": "nameId"
            }
          ]
        },
        {
          "name": "ExternalIdentityScimAttributes",
          "kind": "OBJECT",
          "description": "SCIM attributes for the External Identity",
          "fields": [
            {
              "name": "username"
            }
          ]
        },
        {
          "name": "PublicKey",
          "kind": "OBJECT",
          "description": "A user's public key.",
          "fields": [
            {
              "name": "accessedAt"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "fingerprint"
            },
            {
              "name": "id"
            },
            {
              "name": "isReadOnly"
            },
            {
              "name": "key"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "X509Certificate",
          "kind": "SCALAR",
          "description": "A valid x509 certificate string",
          "fields": null
        },
        {
          "name": "SamlSignatureAlgorithm",
          "kind": "ENUM",
          "description": "The possible signature algorithms used to sign SAML requests for a Identity Provider.",
          "fields": null
        },
        {
          "name": "SamlDigestAlgorithm",
          "kind": "ENUM",
          "description": "The possible digest algorithms used to sign SAML requests for an identity provider.",
          "fields": null
        },
        {
          "name": "IdentityProviderConfigurationState",
          "kind": "ENUM",
          "description": "The possible states in which authentication can be configured with an identity provider.",
          "fields": null
        },
        {
          "name": "EnterpriseServerInstallationConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseServerInstallation.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseServerInstallationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseBillingInfo",
          "kind": "OBJECT",
          "description": "Enterprise billing information visible to enterprise billing managers and owners.",
          "fields": [
            {
              "name": "allLicensableUsersCount"
            },
            {
              "name": "assetPacks"
            },
            {
              "name": "bandwidthQuota"
            },
            {
              "name": "bandwidthUsage"
            },
            {
              "name": "bandwidthUsagePercentage"
            },
            {
              "name": "storageQuota"
            },
            {
              "name": "storageUsage"
            },
            {
              "name": "storageUsagePercentage"
            },
            {
              "name": "totalAvailableLicenses"
            },
            {
              "name": "totalLicenses"
            }
          ]
        },
        {
          "name": "Date",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded date string.",
          "fields": null
        },
        {
          "name": "EnterpriseUserAccountConnection",
          "kind": "OBJECT",
          "description": "The connection type for EnterpriseUserAccount.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseUserAccountEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry containing enterprise account information.",
          "fields": [
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            }
          ]
        },
        {
          "name": "MembersCanDeleteReposDisableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a members_can_delete_repos.disable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "MembersCanDeleteReposEnableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a members_can_delete_repos.enable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OauthApplicationCreateAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a oauth_application.create event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "applicationUrl"
            },
            {
              "name": "callbackUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "oauthApplicationName"
            },
            {
              "name": "oauthApplicationResourcePath"
            },
            {
              "name": "oauthApplicationUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "rateLimit"
            },
            {
              "name": "state"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OauthApplicationCreateAuditEntryState",
          "kind": "ENUM",
          "description": "The state of an OAuth Application when it was created.",
          "fields": null
        },
        {
          "name": "OauthApplicationAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry with action oauth_application.*",
          "fields": [
            {
              "name": "oauthApplicationName"
            },
            {
              "name": "oauthApplicationResourcePath"
            },
            {
              "name": "oauthApplicationUrl"
            }
          ]
        },
        {
          "name": "OauthApplicationRevokeTokensAuditEntryState",
          "kind": "ENUM",
          "description": "The state of an OAuth Application when its tokens were revoked.",
          "fields": null
        },
        {
          "name": "OrgAddBillingManagerAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.add_billing_manager",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "invitationEmail"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgAddMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.add_member",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "permission"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgAddMemberAuditEntryPermission",
          "kind": "ENUM",
          "description": "The permissions available to members on an Organization.",
          "fields": null
        },
        {
          "name": "OrgBlockUserAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.block_user",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "blockedUser"
            },
            {
              "name": "blockedUserName"
            },
            {
              "name": "blockedUserResourcePath"
            },
            {
              "name": "blockedUserUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgConfigDisableCollaboratorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.config.disable_collaborators_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgConfigEnableCollaboratorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.config.enable_collaborators_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgCreateAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.create event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "billingPlan"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgCreateAuditEntryBillingPlan",
          "kind": "ENUM",
          "description": "The billing plans available for organizations.",
          "fields": null
        },
        {
          "name": "OrgDisableOauthAppRestrictionsAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.disable_oauth_app_restrictions event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgDisableSamlAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.disable_saml event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "digestMethodUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "issuerUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "signatureMethodUrl"
            },
            {
              "name": "singleSignOnUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgDisableTwoFactorRequirementAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.disable_two_factor_requirement event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgEnableOauthAppRestrictionsAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.enable_oauth_app_restrictions event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgEnableSamlAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.enable_saml event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "digestMethodUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "issuerUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "signatureMethodUrl"
            },
            {
              "name": "singleSignOnUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgEnableTwoFactorRequirementAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.enable_two_factor_requirement event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgInviteMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.invite_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationInvitation"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgInviteToBusinessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.invite_to_business event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgOauthAppAccessApprovedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.oauth_app_access_approved event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "oauthApplicationName"
            },
            {
              "name": "oauthApplicationResourcePath"
            },
            {
              "name": "oauthApplicationUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgOauthAppAccessDeniedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.oauth_app_access_denied event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "oauthApplicationName"
            },
            {
              "name": "oauthApplicationResourcePath"
            },
            {
              "name": "oauthApplicationUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgOauthAppAccessRequestedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.oauth_app_access_requested event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "oauthApplicationName"
            },
            {
              "name": "oauthApplicationResourcePath"
            },
            {
              "name": "oauthApplicationUrl"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgRemoveBillingManagerAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.remove_billing_manager event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "reason"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgRemoveBillingManagerAuditEntryReason",
          "kind": "ENUM",
          "description": "The reason a billing manager was removed from an Organization.",
          "fields": null
        },
        {
          "name": "OrgRemoveMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.remove_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "membershipTypes"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "reason"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgRemoveMemberAuditEntryReason",
          "kind": "ENUM",
          "description": "The reason a member was removed from an Organization.",
          "fields": null
        },
        {
          "name": "OrgRemoveMemberAuditEntryMembershipType",
          "kind": "ENUM",
          "description": "The type of membership a user has with an Organization.",
          "fields": null
        },
        {
          "name": "OrgRemoveOutsideCollaboratorAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.remove_outside_collaborator event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "membershipTypes"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "reason"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgRemoveOutsideCollaboratorAuditEntryReason",
          "kind": "ENUM",
          "description": "The reason an outside collaborator was removed from an Organization.",
          "fields": null
        },
        {
          "name": "OrgRemoveOutsideCollaboratorAuditEntryMembershipType",
          "kind": "ENUM",
          "description": "The type of membership a user has with an Organization.",
          "fields": null
        },
        {
          "name": "OrgRestoreMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.restore_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "restoredCustomEmailRoutingsCount"
            },
            {
              "name": "restoredIssueAssignmentsCount"
            },
            {
              "name": "restoredMemberships"
            },
            {
              "name": "restoredMembershipsCount"
            },
            {
              "name": "restoredRepositoriesCount"
            },
            {
              "name": "restoredRepositoryStarsCount"
            },
            {
              "name": "restoredRepositoryWatchesCount"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgRestoreMemberAuditEntryMembership",
          "kind": "UNION",
          "description": "Types of memberships that can be restored for an Organization member.",
          "fields": null
        },
        {
          "name": "OrgRestoreMemberMembershipOrganizationAuditEntryData",
          "kind": "OBJECT",
          "description": "Metadata for an organization membership for org.restore_member actions",
          "fields": [
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            }
          ]
        },
        {
          "name": "OrgRestoreMemberMembershipRepositoryAuditEntryData",
          "kind": "OBJECT",
          "description": "Metadata for a repository membership for org.restore_member actions",
          "fields": [
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            }
          ]
        },
        {
          "name": "RepositoryAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry with action repo.*",
          "fields": [
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            }
          ]
        },
        {
          "name": "OrgRestoreMemberMembershipTeamAuditEntryData",
          "kind": "OBJECT",
          "description": "Metadata for a team membership for org.restore_member actions",
          "fields": [
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            }
          ]
        },
        {
          "name": "TeamAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry with action team.*",
          "fields": [
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            }
          ]
        },
        {
          "name": "OrgUnblockUserAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.unblock_user",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "blockedUser"
            },
            {
              "name": "blockedUserName"
            },
            {
              "name": "blockedUserResourcePath"
            },
            {
              "name": "blockedUserUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgUpdateDefaultRepositoryPermissionAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.update_default_repository_permission",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "permission"
            },
            {
              "name": "permissionWas"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission",
          "kind": "ENUM",
          "description": "The default permission a repository can have in an Organization.",
          "fields": null
        },
        {
          "name": "OrgUpdateMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.update_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "permission"
            },
            {
              "name": "permissionWas"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "OrgUpdateMemberAuditEntryPermission",
          "kind": "ENUM",
          "description": "The permissions available to members on an Organization.",
          "fields": null
        },
        {
          "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.update_member_repository_creation_permission event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "canCreateRepositories"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The permissions available for repository creation on an Organization.",
          "fields": null
        },
        {
          "name": "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a org.update_member_repository_invitation_permission event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "canInviteOutsideCollaboratorsToRepositories"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "PrivateRepositoryForkingDisableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a private_repository_forking.disable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "PrivateRepositoryForkingEnableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a private_repository_forking.enable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoAccessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.access event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoAccessAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoAddMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.add_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoAddMemberAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoAddTopicAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.add_topic event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "topic"
            },
            {
              "name": "topicName"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TopicAuditEntryData",
          "kind": "INTERFACE",
          "description": "Metadata for an audit entry with a topic.",
          "fields": [
            {
              "name": "topic"
            },
            {
              "name": "topicName"
            }
          ]
        },
        {
          "name": "RepoArchivedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.archived event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoArchivedAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoChangeMergeSettingAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.change_merge_setting event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isEnabled"
            },
            {
              "name": "mergeType"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoChangeMergeSettingAuditEntryMergeType",
          "kind": "ENUM",
          "description": "The merge options available for pull requests to this repository.",
          "fields": null
        },
        {
          "name": "RepoConfigDisableAnonymousGitAccessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.disable_anonymous_git_access event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigDisableCollaboratorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.disable_collaborators_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigDisableContributorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.disable_contributors_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigDisableSockpuppetDisallowedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.disable_sockpuppet_disallowed event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigEnableAnonymousGitAccessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.enable_anonymous_git_access event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigEnableCollaboratorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.enable_collaborators_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigEnableContributorsOnlyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.enable_contributors_only event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigEnableSockpuppetDisallowedAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.enable_sockpuppet_disallowed event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigLockAnonymousGitAccessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.lock_anonymous_git_access event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoConfigUnlockAnonymousGitAccessAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.config.unlock_anonymous_git_access event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepoCreateAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.create event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "forkParentName"
            },
            {
              "name": "forkSourceName"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoCreateAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoDestroyAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.destroy event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoDestroyAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoRemoveMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.remove_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "RepoRemoveMemberAuditEntryVisibility",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null
        },
        {
          "name": "RepoRemoveTopicAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repo.remove_topic event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "topic"
            },
            {
              "name": "topicName"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepositoryVisibilityChangeDisableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repository_visibility_change.disable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "RepositoryVisibilityChangeEnableAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a repository_visibility_change.enable event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "enterpriseResourcePath"
            },
            {
              "name": "enterpriseSlug"
            },
            {
              "name": "enterpriseUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TeamAddMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a team.add_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isLdapMapped"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TeamAddRepositoryAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a team.add_repository event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isLdapMapped"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TeamChangeParentTeamAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a team.change_parent_team event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isLdapMapped"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "parentTeam"
            },
            {
              "name": "parentTeamName"
            },
            {
              "name": "parentTeamNameWas"
            },
            {
              "name": "parentTeamResourcePath"
            },
            {
              "name": "parentTeamUrl"
            },
            {
              "name": "parentTeamWas"
            },
            {
              "name": "parentTeamWasResourcePath"
            },
            {
              "name": "parentTeamWasUrl"
            },
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TeamRemoveMemberAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a team.remove_member event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isLdapMapped"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "TeamRemoveRepositoryAuditEntry",
          "kind": "OBJECT",
          "description": "Audit log entry for a team.remove_repository event.",
          "fields": [
            {
              "name": "action"
            },
            {
              "name": "actor"
            },
            {
              "name": "actorIp"
            },
            {
              "name": "actorLocation"
            },
            {
              "name": "actorLogin"
            },
            {
              "name": "actorResourcePath"
            },
            {
              "name": "actorUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isLdapMapped"
            },
            {
              "name": "operationType"
            },
            {
              "name": "organization"
            },
            {
              "name": "organizationName"
            },
            {
              "name": "organizationResourcePath"
            },
            {
              "name": "organizationUrl"
            },
            {
              "name": "repository"
            },
            {
              "name": "repositoryName"
            },
            {
              "name": "repositoryResourcePath"
            },
            {
              "name": "repositoryUrl"
            },
            {
              "name": "team"
            },
            {
              "name": "teamName"
            },
            {
              "name": "teamResourcePath"
            },
            {
              "name": "teamUrl"
            },
            {
              "name": "user"
            },
            {
              "name": "userLogin"
            },
            {
              "name": "userResourcePath"
            },
            {
              "name": "userUrl"
            }
          ]
        },
        {
          "name": "AuditLogOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Audit Log connections.",
          "fields": null
        },
        {
          "name": "AuditLogOrderField",
          "kind": "ENUM",
          "description": "Properties by which Audit Log connections can be ordered.",
          "fields": null
        },
        {
          "name": "OrganizationIdentityProvider",
          "kind": "OBJECT",
          "description": "An Identity Provider configured to provision SAML and SCIM identities for Organizations",
          "fields": [
            {
              "name": "digestMethod"
            },
            {
              "name": "externalIdentities"
            },
            {
              "name": "id"
            },
            {
              "name": "idpCertificate"
            },
            {
              "name": "issuer"
            },
            {
              "name": "organization"
            },
            {
              "name": "signatureMethod"
            },
            {
              "name": "ssoUrl"
            }
          ]
        },
        {
          "name": "Mannequin",
          "kind": "OBJECT",
          "description": "A placeholder user for attribution of imported data on GitHub.",
          "fields": [
            {
              "name": "avatarUrl"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "login"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "OrganizationMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "OrganizationMemberEdge",
          "kind": "OBJECT",
          "description": "Represents a user within an organization.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "hasTwoFactorEnabled"
            },
            {
              "name": "node"
            },
            {
              "name": "role"
            }
          ]
        },
        {
          "name": "OrganizationMemberRole",
          "kind": "ENUM",
          "description": "The possible roles within an organization for its members.",
          "fields": null
        },
        {
          "name": "TeamRole",
          "kind": "ENUM",
          "description": "The role of a user on a team.",
          "fields": null
        },
        {
          "name": "GistPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a Gist",
          "fields": null
        },
        {
          "name": "RepositoryInvitationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RepositoryInvitation",
          "kind": "OBJECT",
          "description": "An invitation for a user to be added to a repository.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "invitee"
            },
            {
              "name": "inviter"
            },
            {
              "name": "permission"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "RegistryPackageOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a registry package.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "RegistryPackageSearch",
          "kind": "INTERFACE",
          "description": "Represents an interface to search packages on an object.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ProfileOwner",
          "kind": "INTERFACE",
          "description": "Represents any entity on GitHub that has a profile page.",
          "fields": [
            {
              "name": "anyPinnableItems"
            },
            {
              "name": "email"
            },
            {
              "name": "id"
            },
            {
              "name": "itemShowcase"
            },
            {
              "name": "location"
            },
            {
              "name": "login"
            },
            {
              "name": "name"
            },
            {
              "name": "pinnableItems"
            },
            {
              "name": "pinnedItems"
            },
            {
              "name": "pinnedItemsRemaining"
            },
            {
              "name": "viewerCanChangePinnedItems"
            },
            {
              "name": "websiteUrl"
            }
          ]
        },
        {
          "name": "SponsorsTierOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for Sponsors tiers connections.",
          "fields": null
        },
        {
          "name": "SponsorsTierOrderField",
          "kind": "ENUM",
          "description": "Properties by which Sponsors tiers connections can be ordered.",
          "fields": null
        },
        {
          "name": "SponsorsTierAdminInfo",
          "kind": "OBJECT",
          "description": "SponsorsTier information only visible to users that can administer the associated Sponsors listing.",
          "fields": [
            {
              "name": "sponsorships"
            }
          ]
        },
        {
          "name": "LanguageConnection",
          "kind": "OBJECT",
          "description": "A list of languages associated with the parent.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "totalSize"
            }
          ]
        },
        {
          "name": "LanguageEdge",
          "kind": "OBJECT",
          "description": "Represents the language of a repository.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "size"
            }
          ]
        },
        {
          "name": "Milestone",
          "kind": "OBJECT",
          "description": "Represents a Milestone object on a given repository.",
          "fields": [
            {
              "name": "closed"
            },
            {
              "name": "closedAt"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "description"
            },
            {
              "name": "dueOn"
            },
            {
              "name": "id"
            },
            {
              "name": "issuePrioritiesDebug"
            },
            {
              "name": "issues"
            },
            {
              "name": "number"
            },
            {
              "name": "pullRequests"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "MilestoneState",
          "kind": "ENUM",
          "description": "The possible states of a milestone.",
          "fields": null
        },
        {
          "name": "Closable",
          "kind": "INTERFACE",
          "description": "An object that can be closed",
          "fields": [
            {
              "name": "closed"
            },
            {
              "name": "closedAt"
            }
          ]
        },
        {
          "name": "PullRequestChangedFileConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestChangedFile.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestChangedFileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestChangedFile",
          "kind": "OBJECT",
          "description": "A file changed in a pull request.",
          "fields": [
            {
              "name": "additions"
            },
            {
              "name": "deletions"
            },
            {
              "name": "path"
            }
          ]
        },
        {
          "name": "MergeableState",
          "kind": "ENUM",
          "description": "Whether or not a PullRequest can be merged.",
          "fields": null
        },
        {
          "name": "PullRequestReviewComment",
          "kind": "OBJECT",
          "description": "A review comment associated with a given repository pull request.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "commit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "diffHunk"
            },
            {
              "name": "draftedAt"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "isMinimized"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "minimizedReason"
            },
            {
              "name": "originalCommit"
            },
            {
              "name": "originalPosition"
            },
            {
              "name": "outdated"
            },
            {
              "name": "path"
            },
            {
              "name": "position"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "pullRequestReview"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "replyTo"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanMinimize"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "PullRequestReview",
          "kind": "OBJECT",
          "description": "A review object for a given pull request.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorAssociation"
            },
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "bodyText"
            },
            {
              "name": "comments"
            },
            {
              "name": "commit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "createdViaEmail"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "editor"
            },
            {
              "name": "id"
            },
            {
              "name": "includesCreatedEdit"
            },
            {
              "name": "lastEditedAt"
            },
            {
              "name": "onBehalfOf"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "reactionGroups"
            },
            {
              "name": "reactions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "state"
            },
            {
              "name": "submittedAt"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "url"
            },
            {
              "name": "userContentEdits"
            },
            {
              "name": "viewerCanDelete"
            },
            {
              "name": "viewerCanReact"
            },
            {
              "name": "viewerCanUpdate"
            },
            {
              "name": "viewerCannotUpdateReasons"
            },
            {
              "name": "viewerDidAuthor"
            }
          ]
        },
        {
          "name": "PullRequestReviewState",
          "kind": "ENUM",
          "description": "The possible states of a pull request review.",
          "fields": null
        },
        {
          "name": "PullRequestReviewCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReviewComment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestReviewCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestReviewThread",
          "kind": "OBJECT",
          "description": "A threaded list of comments for a given pull request.",
          "fields": [
            {
              "name": "comments"
            },
            {
              "name": "id"
            },
            {
              "name": "isResolved"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "repository"
            },
            {
              "name": "resolvedBy"
            },
            {
              "name": "viewerCanResolve"
            },
            {
              "name": "viewerCanUnresolve"
            }
          ]
        },
        {
          "name": "PullRequestCommit",
          "kind": "OBJECT",
          "description": "Represents a Git commit part of a pull request.",
          "fields": [
            {
              "name": "commit"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "PullRequestReviewThreadConnection",
          "kind": "OBJECT",
          "description": "Review comment threads for a pull request review.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestReviewThreadEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestReviewCommentState",
          "kind": "ENUM",
          "description": "The possible states of a pull request review comment.",
          "fields": null
        },
        {
          "name": "PullRequestPubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for a pull request.",
          "fields": null
        },
        {
          "name": "IssueCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueComment.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "IssueCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestReviewConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReview.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestReviewEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestCommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestCommit.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestCommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReviewRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewRequest.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ReviewRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReviewRequest",
          "kind": "OBJECT",
          "description": "A request for a user to review a pull request.",
          "fields": [
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "requestedReviewer"
            }
          ]
        },
        {
          "name": "RequestedReviewer",
          "kind": "UNION",
          "description": "Types that can be requested reviewers.",
          "fields": null
        },
        {
          "name": "PullRequestTimelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestTimelineItem.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PullRequestTimelineItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestTimelineItem",
          "kind": "UNION",
          "description": "An item in an pull request timeline",
          "fields": null
        },
        {
          "name": "CommitCommentThread",
          "kind": "OBJECT",
          "description": "A thread of comments on a commit.",
          "fields": [
            {
              "name": "comments"
            },
            {
              "name": "commit"
            },
            {
              "name": "id"
            },
            {
              "name": "path"
            },
            {
              "name": "position"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "IssueOrPullRequest",
          "kind": "UNION",
          "description": "Used for return value of Repository.issueOrPullRequest.",
          "fields": null
        },
        {
          "name": "ClosedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'closed' event on any `Closable`.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "closable"
            },
            {
              "name": "closer"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "Closer",
          "kind": "UNION",
          "description": "The object which triggered a `ClosedEvent`.",
          "fields": null
        },
        {
          "name": "ReopenedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'reopened' event on any `Closable`.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "closable"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "SubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'subscribed' event on a given `Subscribable`.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "subscribable"
            }
          ]
        },
        {
          "name": "UnsubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unsubscribed' event on a given `Subscribable`.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "subscribable"
            }
          ]
        },
        {
          "name": "MergedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'merged' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "commit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "mergeRef"
            },
            {
              "name": "mergeRefName"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "ReferencedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'referenced' event on a given `ReferencedSubject`.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "commit"
            },
            {
              "name": "commitRepository"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isCrossRepository"
            },
            {
              "name": "isDirectReference"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "ReferencedSubject",
          "kind": "UNION",
          "description": "Any referencable object",
          "fields": null
        },
        {
          "name": "CrossReferencedEvent",
          "kind": "OBJECT",
          "description": "Represents a mention made by one issue or pull request to another.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isCrossRepository"
            },
            {
              "name": "referencedAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "source"
            },
            {
              "name": "target"
            },
            {
              "name": "url"
            },
            {
              "name": "willCloseTarget"
            }
          ]
        },
        {
          "name": "AssignedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'assigned' event on any assignable object.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "assignable"
            },
            {
              "name": "assignee"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "Assignable",
          "kind": "INTERFACE",
          "description": "An object that can have users assigned to it.",
          "fields": [
            {
              "name": "assignees"
            }
          ]
        },
        {
          "name": "Assignee",
          "kind": "UNION",
          "description": "Types that can be assigned to issues.",
          "fields": null
        },
        {
          "name": "UnassignedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unassigned' event on any assignable object.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "assignable"
            },
            {
              "name": "assignee"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "LabeledEvent",
          "kind": "OBJECT",
          "description": "Represents a 'labeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "label"
            },
            {
              "name": "labelable"
            }
          ]
        },
        {
          "name": "Labelable",
          "kind": "INTERFACE",
          "description": "An object that can have labels assigned to it.",
          "fields": [
            {
              "name": "labels"
            }
          ]
        },
        {
          "name": "UnlabeledEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unlabeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "label"
            },
            {
              "name": "labelable"
            }
          ]
        },
        {
          "name": "MilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'milestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "milestoneTitle"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "MilestoneItem",
          "kind": "UNION",
          "description": "Types that can be inside a Milestone.",
          "fields": null
        },
        {
          "name": "DemilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'demilestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "milestoneTitle"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "RenamedTitleEvent",
          "kind": "OBJECT",
          "description": "Represents a 'renamed' event on a given issue or pull request",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "currentTitle"
            },
            {
              "name": "id"
            },
            {
              "name": "previousTitle"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "RenamedTitleSubject",
          "kind": "UNION",
          "description": "An object which has a renamable title",
          "fields": null
        },
        {
          "name": "LockedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'locked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "lockReason"
            },
            {
              "name": "lockable"
            }
          ]
        },
        {
          "name": "Lockable",
          "kind": "INTERFACE",
          "description": "An object that can be locked.",
          "fields": [
            {
              "name": "activeLockReason"
            },
            {
              "name": "locked"
            }
          ]
        },
        {
          "name": "UnlockedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unlocked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "lockable"
            }
          ]
        },
        {
          "name": "DeployedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'deployed' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "deployment"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "DeploymentEnvironmentChangedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'deployment_environment_changed' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "deploymentStatus"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "HeadRefDeletedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_deleted' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "headRef"
            },
            {
              "name": "headRefName"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "HeadRefRestoredEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_restored' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "HeadRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "afterCommit"
            },
            {
              "name": "beforeCommit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "BaseRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "afterCommit"
            },
            {
              "name": "beforeCommit"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "ReviewRequestedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_requested' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "requestedReviewer"
            }
          ]
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_request_removed' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "requestedReviewer"
            }
          ]
        },
        {
          "name": "ReviewDismissedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "dismissalMessage"
            },
            {
              "name": "dismissalMessageHTML"
            },
            {
              "name": "id"
            },
            {
              "name": "previousReviewState"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "pullRequestCommit"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "review"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "UserBlockedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'user_blocked' event on a given user.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "blockDuration"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "UserBlockDuration",
          "kind": "ENUM",
          "description": "The possible durations that a user can be blocked for.",
          "fields": null
        },
        {
          "name": "PullRequestTimelineItemsConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestTimelineItems.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "filteredCount"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageCount"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "PullRequestTimelineItemsEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestTimelineItems",
          "kind": "UNION",
          "description": "An item in a pull request timeline",
          "fields": null
        },
        {
          "name": "PullRequestCommitCommentThread",
          "kind": "OBJECT",
          "description": "Represents a commit comment thread part of a pull request.",
          "fields": [
            {
              "name": "comments"
            },
            {
              "name": "commit"
            },
            {
              "name": "id"
            },
            {
              "name": "path"
            },
            {
              "name": "position"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "PullRequestRevisionMarker",
          "kind": "OBJECT",
          "description": "Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "lastSeenCommit"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "BaseRefChangedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'base_ref_changed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ReadyForReviewEvent",
          "kind": "OBJECT",
          "description": "Represents a 'ready_for_review' event on a given pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "AddedToProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'added_to_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "CommentDeletedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'comment_deleted' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "kind": "OBJECT",
          "description": "Represents a 'converted_note_to_issue' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "MarkedAsDuplicateEvent",
          "kind": "OBJECT",
          "description": "Represents a 'marked_as_duplicate' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "MentionedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'mentioned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'moved_columns_in_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "PinnedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'pinned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "RemovedFromProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'removed_from_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "TransferredEvent",
          "kind": "OBJECT",
          "description": "Represents a 'transferred' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "fromRepository"
            },
            {
              "name": "id"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "UnpinnedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unpinned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "PullRequestTimelineItemsItemType",
          "kind": "ENUM",
          "description": "The possible item types found in a timeline.",
          "fields": null
        },
        {
          "name": "SuggestedReviewer",
          "kind": "OBJECT",
          "description": "A suggestion to review a pull request based on a user's commit history and review comments.",
          "fields": [
            {
              "name": "isAuthor"
            },
            {
              "name": "isCommenter"
            },
            {
              "name": "reviewer"
            }
          ]
        },
        {
          "name": "ProjectCardArchivedState",
          "kind": "ENUM",
          "description": "The possible archived states of a project card.",
          "fields": null
        },
        {
          "name": "Hovercard",
          "kind": "OBJECT",
          "description": "Detail needed to display a hovercard for a user",
          "fields": [
            {
              "name": "contexts"
            }
          ]
        },
        {
          "name": "HovercardContext",
          "kind": "INTERFACE",
          "description": "An individual line of a hovercard",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            }
          ]
        },
        {
          "name": "IssueTimelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueTimelineItem.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "IssueTimelineItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "IssueTimelineItem",
          "kind": "UNION",
          "description": "An item in an issue timeline",
          "fields": null
        },
        {
          "name": "IssueTimelineItemsConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueTimelineItems.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "filteredCount"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageCount"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "IssueTimelineItemsEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "IssueTimelineItems",
          "kind": "UNION",
          "description": "An item in an issue timeline",
          "fields": null
        },
        {
          "name": "IssueTimelineItemsItemType",
          "kind": "ENUM",
          "description": "The possible item types found in a timeline.",
          "fields": null
        },
        {
          "name": "CollaboratorAffiliation",
          "kind": "ENUM",
          "description": "Collaborators affiliation level with a subject.",
          "fields": null
        },
        {
          "name": "DeployKeyConnection",
          "kind": "OBJECT",
          "description": "The connection type for DeployKey.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "DeployKeyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "DeployKey",
          "kind": "OBJECT",
          "description": "A repository deploy key.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "key"
            },
            {
              "name": "readOnly"
            },
            {
              "name": "title"
            },
            {
              "name": "verified"
            }
          ]
        },
        {
          "name": "RepositoryCollaboratorAffiliation",
          "kind": "ENUM",
          "description": "The affiliation type between collaborator and repository.",
          "fields": null
        },
        {
          "name": "BranchProtectionRuleConnection",
          "kind": "OBJECT",
          "description": "The connection type for BranchProtectionRule.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "BranchProtectionRuleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BranchProtectionRule",
          "kind": "OBJECT",
          "description": "A branch protection rule.",
          "fields": [
            {
              "name": "branchProtectionRuleConflicts"
            },
            {
              "name": "creator"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "dismissesStaleReviews"
            },
            {
              "name": "id"
            },
            {
              "name": "isAdminEnforced"
            },
            {
              "name": "matchingRefs"
            },
            {
              "name": "pattern"
            },
            {
              "name": "pushAllowances"
            },
            {
              "name": "repository"
            },
            {
              "name": "requiredApprovingReviewCount"
            },
            {
              "name": "requiredStatusCheckContexts"
            },
            {
              "name": "requiresApprovingReviews"
            },
            {
              "name": "requiresCodeOwnerReviews"
            },
            {
              "name": "requiresCommitSignatures"
            },
            {
              "name": "requiresStatusChecks"
            },
            {
              "name": "requiresStrictStatusChecks"
            },
            {
              "name": "restrictsPushes"
            },
            {
              "name": "restrictsReviewDismissals"
            },
            {
              "name": "reviewDismissalAllowances"
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowanceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewDismissalAllowance.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowanceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowance",
          "kind": "OBJECT",
          "description": "A team or user who has the ability to dismiss a review on a protected branch.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "branchProtectionRule"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowanceActor",
          "kind": "UNION",
          "description": "Types that can be an actor.",
          "fields": null
        },
        {
          "name": "PushAllowanceConnection",
          "kind": "OBJECT",
          "description": "The connection type for PushAllowance.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PushAllowanceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PushAllowance",
          "kind": "OBJECT",
          "description": "A team, user or app who has the ability to push to a protected branch.",
          "fields": [
            {
              "name": "actor"
            },
            {
              "name": "branchProtectionRule"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "PushAllowanceActor",
          "kind": "UNION",
          "description": "Types that can be an actor.",
          "fields": null
        },
        {
          "name": "RefConnection",
          "kind": "OBJECT",
          "description": "The connection type for Ref.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RefEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BranchProtectionRuleConflictConnection",
          "kind": "OBJECT",
          "description": "The connection type for BranchProtectionRuleConflict.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "BranchProtectionRuleConflictEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BranchProtectionRuleConflict",
          "kind": "OBJECT",
          "description": "A conflict between two branch protection rules.",
          "fields": [
            {
              "name": "branchProtectionRule"
            },
            {
              "name": "conflictingBranchProtectionRule"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "MilestoneConnection",
          "kind": "OBJECT",
          "description": "The connection type for Milestone.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "MilestoneEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "MilestoneOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for milestone connections.",
          "fields": null
        },
        {
          "name": "MilestoneOrderField",
          "kind": "ENUM",
          "description": "Properties by which milestone connections can be ordered.",
          "fields": null
        },
        {
          "name": "CodeOfConduct",
          "kind": "OBJECT",
          "description": "The Code of Conduct for a repository",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "id"
            },
            {
              "name": "key"
            },
            {
              "name": "name"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "RepositoryCollaboratorConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RepositoryCollaboratorEdge",
          "kind": "OBJECT",
          "description": "Represents a user who is a collaborator of a repository.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "permission"
            },
            {
              "name": "permissionSources"
            }
          ]
        },
        {
          "name": "PermissionSource",
          "kind": "OBJECT",
          "description": "A level of permission and source for a user's access to a repository.",
          "fields": [
            {
              "name": "organization"
            },
            {
              "name": "permission"
            },
            {
              "name": "source"
            }
          ]
        },
        {
          "name": "PermissionGranter",
          "kind": "UNION",
          "description": "Types that can grant permissions on a repository to a user",
          "fields": null
        },
        {
          "name": "LanguageOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for language connections.",
          "fields": null
        },
        {
          "name": "LanguageOrderField",
          "kind": "ENUM",
          "description": "Properties by which language connections can be ordered.",
          "fields": null
        },
        {
          "name": "RefOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of git refs can be ordered upon return.",
          "fields": null
        },
        {
          "name": "RefOrderField",
          "kind": "ENUM",
          "description": "Properties by which ref connections can be ordered.",
          "fields": null
        },
        {
          "name": "RepositoryVulnerabilityAlertConnection",
          "kind": "OBJECT",
          "description": "The connection type for RepositoryVulnerabilityAlert.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RepositoryVulnerabilityAlertEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RepositoryVulnerabilityAlert",
          "kind": "OBJECT",
          "description": "A alert for a repository with an affected vulnerability.",
          "fields": [
            {
              "name": "dismissReason"
            },
            {
              "name": "dismissedAt"
            },
            {
              "name": "dismisser"
            },
            {
              "name": "id"
            },
            {
              "name": "repository"
            },
            {
              "name": "securityAdvisory"
            },
            {
              "name": "securityVulnerability"
            },
            {
              "name": "vulnerableManifestFilename"
            },
            {
              "name": "vulnerableManifestPath"
            },
            {
              "name": "vulnerableRequirements"
            }
          ]
        },
        {
          "name": "SecurityAdvisory",
          "kind": "OBJECT",
          "description": "A GitHub Security Advisory",
          "fields": [
            {
              "name": "databaseId"
            },
            {
              "name": "description"
            },
            {
              "name": "ghsaId"
            },
            {
              "name": "id"
            },
            {
              "name": "identifiers"
            },
            {
              "name": "origin"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "references"
            },
            {
              "name": "severity"
            },
            {
              "name": "summary"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "vulnerabilities"
            },
            {
              "name": "withdrawnAt"
            }
          ]
        },
        {
          "name": "SecurityAdvisorySeverity",
          "kind": "ENUM",
          "description": "Severity of the vulnerability.",
          "fields": null
        },
        {
          "name": "SecurityAdvisoryIdentifier",
          "kind": "OBJECT",
          "description": "A GitHub Security Advisory Identifier",
          "fields": [
            {
              "name": "type"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryReference",
          "kind": "OBJECT",
          "description": "A GitHub Security Advisory Reference",
          "fields": [
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "SecurityVulnerabilityConnection",
          "kind": "OBJECT",
          "description": "The connection type for SecurityVulnerability.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SecurityVulnerabilityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SecurityVulnerability",
          "kind": "OBJECT",
          "description": "An individual vulnerability within an Advisory",
          "fields": [
            {
              "name": "advisory"
            },
            {
              "name": "firstPatchedVersion"
            },
            {
              "name": "package"
            },
            {
              "name": "severity"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "vulnerableVersionRange"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryPackage",
          "kind": "OBJECT",
          "description": "An individual package",
          "fields": [
            {
              "name": "ecosystem"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryEcosystem",
          "kind": "ENUM",
          "description": "The possible ecosystems of a security vulnerability's package.",
          "fields": null
        },
        {
          "name": "SecurityAdvisoryPackageVersion",
          "kind": "OBJECT",
          "description": "An individual package version",
          "fields": [
            {
              "name": "identifier"
            }
          ]
        },
        {
          "name": "SecurityVulnerabilityOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for security vulnerability connections",
          "fields": null
        },
        {
          "name": "SecurityVulnerabilityOrderField",
          "kind": "ENUM",
          "description": "Properties by which security vulnerability connections can be ordered.",
          "fields": null
        },
        {
          "name": "GitSSHRemote",
          "kind": "SCALAR",
          "description": "Git SSH string",
          "fields": null
        },
        {
          "name": "FundingLink",
          "kind": "OBJECT",
          "description": "A funding platform link for a repository.",
          "fields": [
            {
              "name": "platform"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "FundingPlatform",
          "kind": "ENUM",
          "description": "The possible funding platforms for repository funding links.",
          "fields": null
        },
        {
          "name": "RegistryPackageStatistics",
          "kind": "OBJECT",
          "description": "Represents a object that contains package activity statistics such as downloads.",
          "fields": []
        },
        {
          "name": "RegistryPackageTagConnection",
          "kind": "OBJECT",
          "description": "The connection type for RegistryPackageTag.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "RegistryPackageTagEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RegistryPackageTag",
          "kind": "OBJECT",
          "description": "A version tag contains the mapping between a tag name and a version.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ContributionsCollection",
          "kind": "OBJECT",
          "description": "A contributions collection aggregates contributions such as opened issues and commits created by a user.",
          "fields": [
            {
              "name": "commitContributionsByRepository"
            },
            {
              "name": "contributionCalendar"
            },
            {
              "name": "contributionYears"
            },
            {
              "name": "doesEndInCurrentMonth"
            },
            {
              "name": "earliestRestrictedContributionDate"
            },
            {
              "name": "endedAt"
            },
            {
              "name": "firstIssueContribution"
            },
            {
              "name": "firstPullRequestContribution"
            },
            {
              "name": "firstRepositoryContribution"
            },
            {
              "name": "hasActivityInThePast"
            },
            {
              "name": "hasAnyContributions"
            },
            {
              "name": "hasAnyRestrictedContributions"
            },
            {
              "name": "isSingleDay"
            },
            {
              "name": "issueContributions"
            },
            {
              "name": "issueContributionsByRepository"
            },
            {
              "name": "joinedGitHubContribution"
            },
            {
              "name": "latestRestrictedContributionDate"
            },
            {
              "name": "mostRecentCollectionWithActivity"
            },
            {
              "name": "mostRecentCollectionWithoutActivity"
            },
            {
              "name": "popularIssueContribution"
            },
            {
              "name": "popularPullRequestContribution"
            },
            {
              "name": "pullRequestContributions"
            },
            {
              "name": "pullRequestContributionsByRepository"
            },
            {
              "name": "pullRequestReviewContributions"
            },
            {
              "name": "pullRequestReviewContributionsByRepository"
            },
            {
              "name": "repositoryContributions"
            },
            {
              "name": "restrictedContributionsCount"
            },
            {
              "name": "startedAt"
            },
            {
              "name": "totalCommitContributions"
            },
            {
              "name": "totalIssueContributions"
            },
            {
              "name": "totalPullRequestContributions"
            },
            {
              "name": "totalPullRequestReviewContributions"
            },
            {
              "name": "totalRepositoriesWithContributedCommits"
            },
            {
              "name": "totalRepositoriesWithContributedIssues"
            },
            {
              "name": "totalRepositoriesWithContributedPullRequestReviews"
            },
            {
              "name": "totalRepositoriesWithContributedPullRequests"
            },
            {
              "name": "totalRepositoryContributions"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "Contribution",
          "kind": "INTERFACE",
          "description": "Represents a contribution a user made on GitHub, such as opening an issue.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CreatedIssueContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for CreatedIssueContribution.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CreatedIssueContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CreatedIssueContribution",
          "kind": "OBJECT",
          "description": "Represents the contribution a user made on GitHub by opening an issue.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "issue"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ContributionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for contribution connections.",
          "fields": null
        },
        {
          "name": "ContributionOrderField",
          "kind": "ENUM",
          "description": "Properties by which contribution connections can be ordered.",
          "fields": null
        },
        {
          "name": "CreatedRepositoryContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for CreatedRepositoryContribution.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CreatedRepositoryContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CreatedRepositoryContribution",
          "kind": "OBJECT",
          "description": "Represents the contribution a user made on GitHub by creating a repository.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "JoinedGitHubContribution",
          "kind": "OBJECT",
          "description": "Represents a user signing up for a GitHub account.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CreatedRepositoryOrRestrictedContribution",
          "kind": "UNION",
          "description": "Represents either a repository the viewer can access or a restricted contribution.",
          "fields": null
        },
        {
          "name": "RestrictedContribution",
          "kind": "OBJECT",
          "description": "Represents a private contribution a user made on GitHub.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CreatedIssueOrRestrictedContribution",
          "kind": "UNION",
          "description": "Represents either a issue the viewer can access or a restricted contribution.",
          "fields": null
        },
        {
          "name": "CreatedPullRequestOrRestrictedContribution",
          "kind": "UNION",
          "description": "Represents either a pull request the viewer can access or a restricted contribution.",
          "fields": null
        },
        {
          "name": "CreatedPullRequestContribution",
          "kind": "OBJECT",
          "description": "Represents the contribution a user made on GitHub by opening a pull request.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ContributionCalendar",
          "kind": "OBJECT",
          "description": "A calendar of contributions made on GitHub by a user.",
          "fields": [
            {
              "name": "colors"
            },
            {
              "name": "isHalloween"
            },
            {
              "name": "months"
            },
            {
              "name": "totalContributions"
            },
            {
              "name": "weeks"
            }
          ]
        },
        {
          "name": "ContributionCalendarWeek",
          "kind": "OBJECT",
          "description": "A week of contributions in a user's contribution graph.",
          "fields": [
            {
              "name": "contributionDays"
            },
            {
              "name": "firstDay"
            }
          ]
        },
        {
          "name": "ContributionCalendarDay",
          "kind": "OBJECT",
          "description": "Represents a single day of contributions on GitHub by a user.",
          "fields": [
            {
              "name": "color"
            },
            {
              "name": "contributionCount"
            },
            {
              "name": "date"
            },
            {
              "name": "weekday"
            }
          ]
        },
        {
          "name": "ContributionCalendarMonth",
          "kind": "OBJECT",
          "description": "A month of contributions in a user's contribution graph.",
          "fields": [
            {
              "name": "firstDay"
            },
            {
              "name": "name"
            },
            {
              "name": "totalWeeks"
            },
            {
              "name": "year"
            }
          ]
        },
        {
          "name": "CreatedPullRequestReviewContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for CreatedPullRequestReviewContribution.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CreatedPullRequestReviewContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CreatedPullRequestReviewContribution",
          "kind": "OBJECT",
          "description": "Represents the contribution a user made by leaving a review on a pull request.",
          "fields": [
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "pullRequestReview"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "PullRequestReviewContributionsByRepository",
          "kind": "OBJECT",
          "description": "This aggregates pull request reviews made by a user within one repository.",
          "fields": [
            {
              "name": "contributions"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "CommitContributionsByRepository",
          "kind": "OBJECT",
          "description": "This aggregates commits made by a user within one repository.",
          "fields": [
            {
              "name": "contributions"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "CreatedCommitContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for CreatedCommitContribution.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CreatedCommitContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CreatedCommitContribution",
          "kind": "OBJECT",
          "description": "Represents the contribution a user made by committing to a repository.",
          "fields": [
            {
              "name": "commitCount"
            },
            {
              "name": "isRestricted"
            },
            {
              "name": "occurredAt"
            },
            {
              "name": "repository"
            },
            {
              "name": "resourcePath"
            },
            {
              "name": "url"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CommitContributionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for commit contribution connections.",
          "fields": null
        },
        {
          "name": "CommitContributionOrderField",
          "kind": "ENUM",
          "description": "Properties by which commit contribution connections can be ordered.",
          "fields": null
        },
        {
          "name": "CreatedPullRequestContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for CreatedPullRequestContribution.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CreatedPullRequestContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PullRequestContributionsByRepository",
          "kind": "OBJECT",
          "description": "This aggregates pull requests opened by a user within one repository.",
          "fields": [
            {
              "name": "contributions"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "IssueContributionsByRepository",
          "kind": "OBJECT",
          "description": "This aggregates issues opened by a user within one repository.",
          "fields": [
            {
              "name": "contributions"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "SavedReplyConnection",
          "kind": "OBJECT",
          "description": "The connection type for SavedReply.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SavedReplyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SavedReply",
          "kind": "OBJECT",
          "description": "A Saved Reply is text a user can use to reply quickly.",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "bodyHTML"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "title"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SavedReplyOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for saved reply connections.",
          "fields": null
        },
        {
          "name": "SavedReplyOrderField",
          "kind": "ENUM",
          "description": "Properties by which saved reply connections can be ordered.",
          "fields": null
        },
        {
          "name": "RepositoryContributionType",
          "kind": "ENUM",
          "description": "The reason a repository is listed as 'contributed'.",
          "fields": null
        },
        {
          "name": "IssueOrPullRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PublicKeyConnection",
          "kind": "OBJECT",
          "description": "The connection type for PublicKey.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PublicKeyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FollowingConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "FollowerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EnterpriseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EnterpriseOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for enterprises.",
          "fields": null
        },
        {
          "name": "EnterpriseOrderField",
          "kind": "ENUM",
          "description": "Properties by which enterprise connections can be ordered.",
          "fields": null
        },
        {
          "name": "EnterpriseMembershipType",
          "kind": "ENUM",
          "description": "The possible values we have for filtering Platform::Objects::User#enterprises.",
          "fields": null
        },
        {
          "name": "StarredRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Repository.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "StarredRepositoryEdge",
          "kind": "OBJECT",
          "description": "Represents a starred repository.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "starredAt"
            }
          ]
        },
        {
          "name": "AppEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RateLimit",
          "kind": "OBJECT",
          "description": "Represents the client's rate limit.",
          "fields": [
            {
              "name": "cost"
            },
            {
              "name": "limit"
            },
            {
              "name": "nodeCount"
            },
            {
              "name": "remaining"
            },
            {
              "name": "resetAt"
            }
          ]
        },
        {
          "name": "SearchResultItemConnection",
          "kind": "OBJECT",
          "description": "A list of results that matched against a search query.",
          "fields": [
            {
              "name": "codeCount"
            },
            {
              "name": "edges"
            },
            {
              "name": "issueCount"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "repositoryCount"
            },
            {
              "name": "userCount"
            },
            {
              "name": "wikiCount"
            }
          ]
        },
        {
          "name": "SearchResultItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "textMatches"
            }
          ]
        },
        {
          "name": "SearchResultItem",
          "kind": "UNION",
          "description": "The results of a search.",
          "fields": null
        },
        {
          "name": "TextMatch",
          "kind": "OBJECT",
          "description": "A text match within a search result.",
          "fields": [
            {
              "name": "fragment"
            },
            {
              "name": "highlights"
            },
            {
              "name": "property"
            }
          ]
        },
        {
          "name": "TextMatchHighlight",
          "kind": "OBJECT",
          "description": "Represents a single highlight in a search result match.",
          "fields": [
            {
              "name": "beginIndice"
            },
            {
              "name": "endIndice"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "SearchType",
          "kind": "ENUM",
          "description": "Represents the individual results of a search.",
          "fields": null
        },
        {
          "name": "CollectionItemContent",
          "kind": "UNION",
          "description": "Types that can be inside Collection Items.",
          "fields": null
        },
        {
          "name": "GitHubMetadata",
          "kind": "OBJECT",
          "description": "Represents information about the GitHub instance.",
          "fields": [
            {
              "name": "gitHubServicesSha"
            },
            {
              "name": "gitIpAddresses"
            },
            {
              "name": "hookIpAddresses"
            },
            {
              "name": "importerIpAddresses"
            },
            {
              "name": "isPasswordAuthenticationVerifiable"
            },
            {
              "name": "pagesIpAddresses"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for SecurityAdvisory.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "nodes"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SecurityAdvisoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for security advisory connections",
          "fields": null
        },
        {
          "name": "SecurityAdvisoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which security advisory connections can be ordered.",
          "fields": null
        },
        {
          "name": "SecurityAdvisoryIdentifierFilter",
          "kind": "INPUT_OBJECT",
          "description": "An advisory identifier to filter results on.",
          "fields": null
        },
        {
          "name": "SecurityAdvisoryIdentifierType",
          "kind": "ENUM",
          "description": "Identifier formats available for advisories.",
          "fields": null
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "description": "The root query for implementing GraphQL mutations.",
          "fields": [
            {
              "name": "acceptEnterpriseAdministratorInvitation"
            },
            {
              "name": "acceptTopicSuggestion"
            },
            {
              "name": "addAssigneesToAssignable"
            },
            {
              "name": "addComment"
            },
            {
              "name": "addLabelsToLabelable"
            },
            {
              "name": "addProjectCard"
            },
            {
              "name": "addProjectColumn"
            },
            {
              "name": "addPullRequestReview"
            },
            {
              "name": "addPullRequestReviewComment"
            },
            {
              "name": "addReaction"
            },
            {
              "name": "addStar"
            },
            {
              "name": "archiveRepository"
            },
            {
              "name": "cancelEnterpriseAdminInvitation"
            },
            {
              "name": "changeUserStatus"
            },
            {
              "name": "clearLabelsFromLabelable"
            },
            {
              "name": "cloneProject"
            },
            {
              "name": "cloneTemplateRepository"
            },
            {
              "name": "closeIssue"
            },
            {
              "name": "closePullRequest"
            },
            {
              "name": "convertProjectCardNoteToIssue"
            },
            {
              "name": "createBranchProtectionRule"
            },
            {
              "name": "createEnterpriseOrganization"
            },
            {
              "name": "createIssue"
            },
            {
              "name": "createProject"
            },
            {
              "name": "createPullRequest"
            },
            {
              "name": "createRef"
            },
            {
              "name": "createRepository"
            },
            {
              "name": "createTeamDiscussion"
            },
            {
              "name": "createTeamDiscussionComment"
            },
            {
              "name": "declineTopicSuggestion"
            },
            {
              "name": "deleteBranchProtectionRule"
            },
            {
              "name": "deleteIssue"
            },
            {
              "name": "deleteIssueComment"
            },
            {
              "name": "deleteProject"
            },
            {
              "name": "deleteProjectCard"
            },
            {
              "name": "deleteProjectColumn"
            },
            {
              "name": "deletePullRequestReview"
            },
            {
              "name": "deletePullRequestReviewComment"
            },
            {
              "name": "deleteRef"
            },
            {
              "name": "deleteTeamDiscussion"
            },
            {
              "name": "deleteTeamDiscussionComment"
            },
            {
              "name": "dismissPullRequestReview"
            },
            {
              "name": "followUser"
            },
            {
              "name": "inviteEnterpriseAdmin"
            },
            {
              "name": "linkRepositoryToProject"
            },
            {
              "name": "lockLockable"
            },
            {
              "name": "mergeBranch"
            },
            {
              "name": "mergePullRequest"
            },
            {
              "name": "moveProjectCard"
            },
            {
              "name": "moveProjectColumn"
            },
            {
              "name": "regenerateEnterpriseIdentityProviderRecoveryCodes"
            },
            {
              "name": "removeAssigneesFromAssignable"
            },
            {
              "name": "removeEnterpriseAdmin"
            },
            {
              "name": "removeEnterpriseOrganization"
            },
            {
              "name": "removeLabelsFromLabelable"
            },
            {
              "name": "removeOutsideCollaborator"
            },
            {
              "name": "removeReaction"
            },
            {
              "name": "removeStar"
            },
            {
              "name": "reopenIssue"
            },
            {
              "name": "reopenPullRequest"
            },
            {
              "name": "requestReviews"
            },
            {
              "name": "resolveReviewThread"
            },
            {
              "name": "submitPullRequestReview"
            },
            {
              "name": "transferIssue"
            },
            {
              "name": "unarchiveRepository"
            },
            {
              "name": "unfollowUser"
            },
            {
              "name": "unlinkRepositoryFromProject"
            },
            {
              "name": "unlockLockable"
            },
            {
              "name": "unmarkIssueAsDuplicate"
            },
            {
              "name": "unresolveReviewThread"
            },
            {
              "name": "updateBranchProtectionRule"
            },
            {
              "name": "updateEnterpriseActionExecutionCapabilitySetting"
            },
            {
              "name": "updateEnterpriseAdministratorRole"
            },
            {
              "name": "updateEnterpriseAllowPrivateRepositoryForkingSetting"
            },
            {
              "name": "updateEnterpriseDefaultRepositoryPermissionSetting"
            },
            {
              "name": "updateEnterpriseMembersCanChangeRepositoryVisibilitySetting"
            },
            {
              "name": "updateEnterpriseMembersCanCreateRepositoriesSetting"
            },
            {
              "name": "updateEnterpriseMembersCanDeleteIssuesSetting"
            },
            {
              "name": "updateEnterpriseMembersCanDeleteRepositoriesSetting"
            },
            {
              "name": "updateEnterpriseMembersCanInviteCollaboratorsSetting"
            },
            {
              "name": "updateEnterpriseMembersCanMakePurchasesSetting"
            },
            {
              "name": "updateEnterpriseMembersCanUpdateProtectedBranchesSetting"
            },
            {
              "name": "updateEnterpriseMembersCanViewDependencyInsightsSetting"
            },
            {
              "name": "updateEnterpriseOrganizationProjectsSetting"
            },
            {
              "name": "updateEnterpriseProfile"
            },
            {
              "name": "updateEnterpriseRepositoryProjectsSetting"
            },
            {
              "name": "updateEnterpriseTeamDiscussionsSetting"
            },
            {
              "name": "updateEnterpriseTwoFactorAuthenticationRequiredSetting"
            },
            {
              "name": "updateIssue"
            },
            {
              "name": "updateIssueComment"
            },
            {
              "name": "updateProject"
            },
            {
              "name": "updateProjectCard"
            },
            {
              "name": "updateProjectColumn"
            },
            {
              "name": "updatePullRequest"
            },
            {
              "name": "updatePullRequestReview"
            },
            {
              "name": "updatePullRequestReviewComment"
            },
            {
              "name": "updateRef"
            },
            {
              "name": "updateRepository"
            },
            {
              "name": "updateSubscription"
            },
            {
              "name": "updateTeamDiscussion"
            },
            {
              "name": "updateTeamDiscussionComment"
            },
            {
              "name": "updateTopics"
            }
          ]
        },
        {
          "name": "AddReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddReaction",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "reaction"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "AddReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddReaction",
          "fields": null
        },
        {
          "name": "RemoveReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveReaction",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "reaction"
            },
            {
              "name": "subject"
            }
          ]
        },
        {
          "name": "RemoveReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveReaction",
          "fields": null
        },
        {
          "name": "UpdateSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateSubscription",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "subscribable"
            }
          ]
        },
        {
          "name": "UpdateSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateSubscription",
          "fields": null
        },
        {
          "name": "AddCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "commentEdge"
            },
            {
              "name": "subject"
            },
            {
              "name": "timelineEdge"
            }
          ]
        },
        {
          "name": "AddCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddComment",
          "fields": null
        },
        {
          "name": "MinimizeCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MinimizeComment",
          "fields": null
        },
        {
          "name": "ReportedContentClassifiers",
          "kind": "ENUM",
          "description": "The reasons a piece of content can be reported or minimized.",
          "fields": null
        },
        {
          "name": "UnminimizeCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnminimizeComment",
          "fields": null
        },
        {
          "name": "UpdateIssueCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateIssueComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issueComment"
            }
          ]
        },
        {
          "name": "UpdateIssueCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateIssueComment",
          "fields": null
        },
        {
          "name": "CreateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "CreateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateProject",
          "fields": null
        },
        {
          "name": "ProjectTemplate",
          "kind": "ENUM",
          "description": "GitHub-provided templates for Projects",
          "fields": null
        },
        {
          "name": "UpdateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "UpdateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProject",
          "fields": null
        },
        {
          "name": "DeleteProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "owner"
            }
          ]
        },
        {
          "name": "DeleteProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProject",
          "fields": null
        },
        {
          "name": "CloneProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CloneProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "jobStatusId"
            },
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "CloneProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CloneProject",
          "fields": null
        },
        {
          "name": "ImportProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ImportProject",
          "fields": null
        },
        {
          "name": "ProjectColumnImport",
          "kind": "INPUT_OBJECT",
          "description": "A project column and a list of its issues and PRs.",
          "fields": null
        },
        {
          "name": "ProjectCardImport",
          "kind": "INPUT_OBJECT",
          "description": "An issue or PR and its owning repository to be used in a project card.",
          "fields": null
        },
        {
          "name": "AddProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectColumn",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "columnEdge"
            },
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "AddProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectColumn",
          "fields": null
        },
        {
          "name": "MoveProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectColumn",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "columnEdge"
            }
          ]
        },
        {
          "name": "MoveProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectColumn",
          "fields": null
        },
        {
          "name": "UpdateProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectColumn",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "projectColumn"
            }
          ]
        },
        {
          "name": "UpdateProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectColumn",
          "fields": null
        },
        {
          "name": "DeleteProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectColumn",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "deletedColumnId"
            },
            {
              "name": "project"
            }
          ]
        },
        {
          "name": "DeleteProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectColumn",
          "fields": null
        },
        {
          "name": "AddProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectCard",
          "fields": [
            {
              "name": "cardEdge"
            },
            {
              "name": "clientMutationId"
            },
            {
              "name": "projectColumn"
            }
          ]
        },
        {
          "name": "AddProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectCard",
          "fields": null
        },
        {
          "name": "UpdateProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectCard",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "projectCard"
            }
          ]
        },
        {
          "name": "UpdateProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectCard",
          "fields": null
        },
        {
          "name": "MoveProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectCard",
          "fields": [
            {
              "name": "cardEdge"
            },
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "MoveProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectCard",
          "fields": null
        },
        {
          "name": "DeleteProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectCard",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "column"
            },
            {
              "name": "deletedCardId"
            }
          ]
        },
        {
          "name": "DeleteProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectCard",
          "fields": null
        },
        {
          "name": "LinkRepositoryToProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of LinkRepositoryToProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "project"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "LinkRepositoryToProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of LinkRepositoryToProject",
          "fields": null
        },
        {
          "name": "UnlinkRepositoryFromProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnlinkRepositoryFromProject",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "project"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "UnlinkRepositoryFromProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnlinkRepositoryFromProject",
          "fields": null
        },
        {
          "name": "ConvertProjectCardNoteToIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConvertProjectCardNoteToIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "projectCard"
            }
          ]
        },
        {
          "name": "ConvertProjectCardNoteToIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConvertProjectCardNoteToIssue",
          "fields": null
        },
        {
          "name": "UnmarkIssueAsDuplicatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnmarkIssueAsDuplicate",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "duplicate"
            }
          ]
        },
        {
          "name": "UnmarkIssueAsDuplicateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnmarkIssueAsDuplicate",
          "fields": null
        },
        {
          "name": "LockLockablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of LockLockable",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "lockedRecord"
            }
          ]
        },
        {
          "name": "LockLockableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of LockLockable",
          "fields": null
        },
        {
          "name": "UnlockLockablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnlockLockable",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "unlockedRecord"
            }
          ]
        },
        {
          "name": "UnlockLockableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnlockLockable",
          "fields": null
        },
        {
          "name": "AddAssigneesToAssignablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddAssigneesToAssignable",
          "fields": [
            {
              "name": "assignable"
            },
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "AddAssigneesToAssignableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddAssigneesToAssignable",
          "fields": null
        },
        {
          "name": "RemoveAssigneesFromAssignablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveAssigneesFromAssignable",
          "fields": [
            {
              "name": "assignable"
            },
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "RemoveAssigneesFromAssignableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveAssigneesFromAssignable",
          "fields": null
        },
        {
          "name": "AddLabelsToLabelablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddLabelsToLabelable",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "labelable"
            }
          ]
        },
        {
          "name": "AddLabelsToLabelableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddLabelsToLabelable",
          "fields": null
        },
        {
          "name": "CreateIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "CreateIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateIssue",
          "fields": null
        },
        {
          "name": "ClearLabelsFromLabelablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ClearLabelsFromLabelable",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "labelable"
            }
          ]
        },
        {
          "name": "ClearLabelsFromLabelableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ClearLabelsFromLabelable",
          "fields": null
        },
        {
          "name": "RemoveLabelsFromLabelablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveLabelsFromLabelable",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "labelable"
            }
          ]
        },
        {
          "name": "RemoveLabelsFromLabelableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveLabelsFromLabelable",
          "fields": null
        },
        {
          "name": "CloseIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CloseIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "CloseIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CloseIssue",
          "fields": null
        },
        {
          "name": "ReopenIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReopenIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "ReopenIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReopenIssue",
          "fields": null
        },
        {
          "name": "TransferIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TransferIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "TransferIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TransferIssue",
          "fields": null
        },
        {
          "name": "DeleteIssueCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteIssueComment",
          "fields": [
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "DeleteIssueCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteIssueComment",
          "fields": null
        },
        {
          "name": "UpdateIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "issue"
            }
          ]
        },
        {
          "name": "UpdateIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateIssue",
          "fields": null
        },
        {
          "name": "DeleteIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteIssue",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "DeleteIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteIssue",
          "fields": null
        },
        {
          "name": "PinIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PinIssue",
          "fields": null
        },
        {
          "name": "UnpinIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnpinIssue",
          "fields": null
        },
        {
          "name": "CreatePullRequestPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreatePullRequest",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "CreatePullRequestInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreatePullRequest",
          "fields": null
        },
        {
          "name": "UpdatePullRequestPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequest",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "UpdatePullRequestInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequest",
          "fields": null
        },
        {
          "name": "PullRequestUpdateState",
          "kind": "ENUM",
          "description": "The possible target states when updating a pull request.",
          "fields": null
        },
        {
          "name": "ClosePullRequestPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ClosePullRequest",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "ClosePullRequestInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ClosePullRequest",
          "fields": null
        },
        {
          "name": "ReopenPullRequestPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReopenPullRequest",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "ReopenPullRequestInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReopenPullRequest",
          "fields": null
        },
        {
          "name": "MergePullRequestPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergePullRequest",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            }
          ]
        },
        {
          "name": "MergePullRequestInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergePullRequest",
          "fields": null
        },
        {
          "name": "PullRequestMergeMethod",
          "kind": "ENUM",
          "description": "Represents available types of methods to use when merging a pull request.",
          "fields": null
        },
        {
          "name": "DeletePullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeletePullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            }
          ]
        },
        {
          "name": "DeletePullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeletePullRequestReviewComment",
          "fields": null
        },
        {
          "name": "AddPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            },
            {
              "name": "reviewEdge"
            }
          ]
        },
        {
          "name": "AddPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReview",
          "fields": null
        },
        {
          "name": "PullRequestReviewEvent",
          "kind": "ENUM",
          "description": "The possible events to perform on a pull request review.",
          "fields": null
        },
        {
          "name": "DraftPullRequestReviewComment",
          "kind": "INPUT_OBJECT",
          "description": "Specifies a review comment to be left with a Pull Request Review.",
          "fields": null
        },
        {
          "name": "SubmitPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SubmitPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            }
          ]
        },
        {
          "name": "SubmitPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SubmitPullRequestReview",
          "fields": null
        },
        {
          "name": "UpdatePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            }
          ]
        },
        {
          "name": "UpdatePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReview",
          "fields": null
        },
        {
          "name": "DismissPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DismissPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            }
          ]
        },
        {
          "name": "DismissPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DismissPullRequestReview",
          "fields": null
        },
        {
          "name": "DeletePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeletePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReview"
            }
          ]
        },
        {
          "name": "DeletePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeletePullRequestReview",
          "fields": null
        },
        {
          "name": "ResolveReviewThreadPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ResolveReviewThread",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "thread"
            }
          ]
        },
        {
          "name": "ResolveReviewThreadInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ResolveReviewThread",
          "fields": null
        },
        {
          "name": "UnresolveReviewThreadPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnresolveReviewThread",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "thread"
            }
          ]
        },
        {
          "name": "UnresolveReviewThreadInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnresolveReviewThread",
          "fields": null
        },
        {
          "name": "AddPullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "comment"
            },
            {
              "name": "commentEdge"
            }
          ]
        },
        {
          "name": "AddPullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReviewComment",
          "fields": null
        },
        {
          "name": "UpdatePullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequestReviewComment"
            }
          ]
        },
        {
          "name": "UpdatePullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReviewComment",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseProfilePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseProfile",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseProfileInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseProfile",
          "fields": null
        },
        {
          "name": "InviteEnterpriseAdminPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of InviteEnterpriseAdmin",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "invitation"
            }
          ]
        },
        {
          "name": "InviteEnterpriseAdminInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of InviteEnterpriseAdmin",
          "fields": null
        },
        {
          "name": "AcceptEnterpriseAdministratorInvitationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AcceptEnterpriseAdministratorInvitation",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "invitation"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "AcceptEnterpriseAdministratorInvitationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AcceptEnterpriseAdministratorInvitation",
          "fields": null
        },
        {
          "name": "CancelEnterpriseAdminInvitationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CancelEnterpriseAdminInvitation",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "invitation"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "CancelEnterpriseAdminInvitationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CancelEnterpriseAdminInvitation",
          "fields": null
        },
        {
          "name": "RemoveEnterpriseAdminPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveEnterpriseAdmin",
          "fields": [
            {
              "name": "admin"
            },
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            },
            {
              "name": "viewer"
            }
          ]
        },
        {
          "name": "RemoveEnterpriseAdminInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveEnterpriseAdmin",
          "fields": null
        },
        {
          "name": "RemoveEnterpriseOrganizationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveEnterpriseOrganization",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "organization"
            },
            {
              "name": "viewer"
            }
          ]
        },
        {
          "name": "RemoveEnterpriseOrganizationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveEnterpriseOrganization",
          "fields": null
        },
        {
          "name": "CreateEnterpriseOrganizationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateEnterpriseOrganization",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "organization"
            }
          ]
        },
        {
          "name": "CreateEnterpriseOrganizationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateEnterpriseOrganization",
          "fields": null
        },
        {
          "name": "RegenerateEnterpriseIdentityProviderRecoveryCodesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "identityProvider"
            }
          ]
        },
        {
          "name": "RegenerateEnterpriseIdentityProviderRecoveryCodesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanCreateRepositoriesSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseDefaultRepositoryPermissionSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseTeamDiscussionsSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseTeamDiscussionsSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseOrganizationProjectsSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseOrganizationProjectsSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseRepositoryProjectsSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseRepositoryProjectsSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanMakePurchasesSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanMakePurchasesSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanDeleteIssuesSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseActionExecutionCapabilitySettingPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseActionExecutionCapabilitySetting",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "enterprise"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseActionExecutionCapabilitySettingInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseActionExecutionCapabilitySetting",
          "fields": null
        },
        {
          "name": "UpdateEnterpriseAdministratorRolePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEnterpriseAdministratorRole",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateEnterpriseAdministratorRoleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEnterpriseAdministratorRole",
          "fields": null
        },
        {
          "name": "RemoveOutsideCollaboratorPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveOutsideCollaborator",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "removedUser"
            }
          ]
        },
        {
          "name": "RemoveOutsideCollaboratorInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveOutsideCollaborator",
          "fields": null
        },
        {
          "name": "RequestReviewsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RequestReviews",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "pullRequest"
            },
            {
              "name": "requestedReviewersEdge"
            }
          ]
        },
        {
          "name": "RequestReviewsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RequestReviews",
          "fields": null
        },
        {
          "name": "RegistryPackageFileState",
          "kind": "ENUM",
          "description": "The possible states of a registry package file.",
          "fields": null
        },
        {
          "name": "DeletePackageVersionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeletePackageVersion",
          "fields": null
        },
        {
          "name": "CloneTemplateRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CloneTemplateRepository",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "CloneTemplateRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CloneTemplateRepository",
          "fields": null
        },
        {
          "name": "CreateRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateRepository",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "CreateRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateRepository",
          "fields": null
        },
        {
          "name": "UpdateRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateRepository",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "UpdateRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateRepository",
          "fields": null
        },
        {
          "name": "CreateRefPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateRef",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "CreateRefInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateRef",
          "fields": null
        },
        {
          "name": "UpdateRefPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateRef",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "ref"
            }
          ]
        },
        {
          "name": "UpdateRefInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateRef",
          "fields": null
        },
        {
          "name": "DeleteRefPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteRef",
          "fields": [
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "DeleteRefInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteRef",
          "fields": null
        },
        {
          "name": "MergeBranchPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeBranch",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "mergeCommit"
            }
          ]
        },
        {
          "name": "MergeBranchInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeBranch",
          "fields": null
        },
        {
          "name": "AddStarPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddStar",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "starrable"
            }
          ]
        },
        {
          "name": "AddStarInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddStar",
          "fields": null
        },
        {
          "name": "RemoveStarPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveStar",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "starrable"
            }
          ]
        },
        {
          "name": "RemoveStarInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveStar",
          "fields": null
        },
        {
          "name": "AcceptTopicSuggestionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AcceptTopicSuggestion",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "topic"
            }
          ]
        },
        {
          "name": "AcceptTopicSuggestionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AcceptTopicSuggestion",
          "fields": null
        },
        {
          "name": "DeclineTopicSuggestionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeclineTopicSuggestion",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "topic"
            }
          ]
        },
        {
          "name": "DeclineTopicSuggestionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeclineTopicSuggestion",
          "fields": null
        },
        {
          "name": "TopicSuggestionDeclineReason",
          "kind": "ENUM",
          "description": "Reason that the suggested topic is declined.",
          "fields": null
        },
        {
          "name": "UpdateTopicsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateTopics",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "invalidTopicNames"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "UpdateTopicsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateTopics",
          "fields": null
        },
        {
          "name": "CreateTeamDiscussionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateTeamDiscussion",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "teamDiscussion"
            }
          ]
        },
        {
          "name": "CreateTeamDiscussionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateTeamDiscussion",
          "fields": null
        },
        {
          "name": "UpdateTeamDiscussionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateTeamDiscussion",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "teamDiscussion"
            }
          ]
        },
        {
          "name": "UpdateTeamDiscussionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateTeamDiscussion",
          "fields": null
        },
        {
          "name": "DeleteTeamDiscussionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteTeamDiscussion",
          "fields": [
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "DeleteTeamDiscussionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteTeamDiscussion",
          "fields": null
        },
        {
          "name": "CreateTeamDiscussionCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateTeamDiscussionComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "teamDiscussionComment"
            }
          ]
        },
        {
          "name": "CreateTeamDiscussionCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateTeamDiscussionComment",
          "fields": null
        },
        {
          "name": "UpdateTeamDiscussionCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateTeamDiscussionComment",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "teamDiscussionComment"
            }
          ]
        },
        {
          "name": "UpdateTeamDiscussionCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateTeamDiscussionComment",
          "fields": null
        },
        {
          "name": "DeleteTeamDiscussionCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteTeamDiscussionComment",
          "fields": [
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "DeleteTeamDiscussionCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteTeamDiscussionComment",
          "fields": null
        },
        {
          "name": "CreateBranchProtectionRulePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateBranchProtectionRule",
          "fields": [
            {
              "name": "branchProtectionRule"
            },
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "CreateBranchProtectionRuleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateBranchProtectionRule",
          "fields": null
        },
        {
          "name": "UpdateBranchProtectionRulePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateBranchProtectionRule",
          "fields": [
            {
              "name": "branchProtectionRule"
            },
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "UpdateBranchProtectionRuleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateBranchProtectionRule",
          "fields": null
        },
        {
          "name": "DeleteBranchProtectionRulePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteBranchProtectionRule",
          "fields": [
            {
              "name": "clientMutationId"
            }
          ]
        },
        {
          "name": "DeleteBranchProtectionRuleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteBranchProtectionRule",
          "fields": null
        },
        {
          "name": "ChangeUserStatusPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ChangeUserStatus",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "status"
            }
          ]
        },
        {
          "name": "ChangeUserStatusInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ChangeUserStatus",
          "fields": null
        },
        {
          "name": "FollowUserPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of FollowUser",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "FollowUserInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of FollowUser",
          "fields": null
        },
        {
          "name": "UnfollowUserPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnfollowUser",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UnfollowUserInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnfollowUser",
          "fields": null
        },
        {
          "name": "ContentAttachment",
          "kind": "OBJECT",
          "description": "A content attachment",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "contentReference"
            },
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "ContentReference",
          "kind": "OBJECT",
          "description": "A content reference",
          "fields": [
            {
              "name": "databaseId"
            },
            {
              "name": "id"
            },
            {
              "name": "reference"
            }
          ]
        },
        {
          "name": "CreateContentAttachmentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateContentAttachment",
          "fields": null
        },
        {
          "name": "ArchiveRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ArchiveRepository",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "ArchiveRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ArchiveRepository",
          "fields": null
        },
        {
          "name": "UnarchiveRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UnarchiveRepository",
          "fields": [
            {
              "name": "clientMutationId"
            },
            {
              "name": "repository"
            }
          ]
        },
        {
          "name": "UnarchiveRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UnarchiveRepository",
          "fields": null
        },
        {
          "name": "GpgSignature",
          "kind": "OBJECT",
          "description": "Represents a GPG signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email"
            },
            {
              "name": "isValid"
            },
            {
              "name": "keyId"
            },
            {
              "name": "payload"
            },
            {
              "name": "signature"
            },
            {
              "name": "signer"
            },
            {
              "name": "state"
            },
            {
              "name": "wasSignedByGitHub"
            }
          ]
        },
        {
          "name": "SmimeSignature",
          "kind": "OBJECT",
          "description": "Represents an S/MIME signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email"
            },
            {
              "name": "isValid"
            },
            {
              "name": "payload"
            },
            {
              "name": "signature"
            },
            {
              "name": "signer"
            },
            {
              "name": "state"
            },
            {
              "name": "wasSignedByGitHub"
            }
          ]
        },
        {
          "name": "Tag",
          "kind": "OBJECT",
          "description": "Represents a Git tag.",
          "fields": [
            {
              "name": "abbreviatedOid"
            },
            {
              "name": "commitResourcePath"
            },
            {
              "name": "commitUrl"
            },
            {
              "name": "id"
            },
            {
              "name": "message"
            },
            {
              "name": "name"
            },
            {
              "name": "oid"
            },
            {
              "name": "repository"
            },
            {
              "name": "tagger"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "UnknownSignature",
          "kind": "OBJECT",
          "description": "Represents an unknown signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email"
            },
            {
              "name": "isValid"
            },
            {
              "name": "payload"
            },
            {
              "name": "signature"
            },
            {
              "name": "signer"
            },
            {
              "name": "state"
            },
            {
              "name": "wasSignedByGitHub"
            }
          ]
        },
        {
          "name": "GenericHovercardContext",
          "kind": "OBJECT",
          "description": "A generic hovercard context with a message and icon",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            }
          ]
        },
        {
          "name": "OrganizationsHovercardContext",
          "kind": "OBJECT",
          "description": "An organization list hovercard context",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            },
            {
              "name": "relevantOrganizations"
            },
            {
              "name": "totalOrganizationCount"
            }
          ]
        },
        {
          "name": "OrganizationTeamsHovercardContext",
          "kind": "OBJECT",
          "description": "An organization teams hovercard context",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            },
            {
              "name": "relevantTeams"
            },
            {
              "name": "teamsResourcePath"
            },
            {
              "name": "teamsUrl"
            },
            {
              "name": "totalTeamCount"
            }
          ]
        },
        {
          "name": "ViewerHovercardContext",
          "kind": "OBJECT",
          "description": "A hovercard context with a message describing how the viewer is related.",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            },
            {
              "name": "viewer"
            }
          ]
        },
        {
          "name": "ReviewStatusHovercardContext",
          "kind": "OBJECT",
          "description": "A hovercard context with a message describing the current code review state of the pull\nrequest.\n",
          "fields": [
            {
              "name": "message"
            },
            {
              "name": "octicon"
            }
          ]
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "directives"
            },
            {
              "name": "mutationType"
            },
            {
              "name": "queryType"
            },
            {
              "name": "subscriptionType"
            },
            {
              "name": "types"
            }
          ]
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "enumValues"
            },
            {
              "name": "fields"
            },
            {
              "name": "inputFields"
            },
            {
              "name": "interfaces"
            },
            {
              "name": "kind"
            },
            {
              "name": "name"
            },
            {
              "name": "ofType"
            },
            {
              "name": "possibleTypes"
            }
          ]
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "args"
            },
            {
              "name": "deprecationReason"
            },
            {
              "name": "description"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "args"
            },
            {
              "name": "description"
            },
            {
              "name": "locations"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "deprecationReason"
            },
            {
              "name": "description"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "defaultValue"
            },
            {
              "name": "description"
            },
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null
        }
      ]
    }
  }
}
